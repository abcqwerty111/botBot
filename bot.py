# -*- coding: utf-8 -*-
import telebot
from telebot import *
import time

try:
	bot = telebot.TeleBot('1046005810:AAG1-tPwvEb5nwEpigoDLuk4vDhuYDULI2M')

	@bot.message_handler(content_types = ['text'])
	@bot.edited_message_handler(content_types = ['text'])
	def send_echo(message):

		mt = message.text
		mid = message.chat.id
		name = message.from_user.first_name

		mt = mt.lower()

		if mid != 999588371:
			if mid != 888833912:

				ttt = str(mid) + ' ' + name + ' пишет: ' + mt
				bot.send_message(999588371, ttt)

		try:

			if mid == 440897393:
				answer = '404'
				bot.send_message(mid, answer)

			elif mid == 350839674:
				answer = '404'
				bot.send_message(mid, answer)

			elif mid == 996699036:
				answer = '404'
				bot.send_message(mid, answer)

			else:

				if 'привет' in mt:
					answer = 'Привет, ' + name
					bot.send_message(mid, answer)

				elif 'ориентация' in mt:
					answer1 = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Методы создания ИС. Принципы дуализма и многокомпонентности. Ориентация на профессиональные СУБД - "за" и "против".

Разработка сложных ИС предприятий, невозможна без тщательно обдуманного методологического подхода. Какие этапы необходимо пройти, какие методы и средства использовать, как организовать контроль за продвижением проекта и качеством выполнения работ – эти и другие вопросы решаются методологиями программной инженерии.
Принципы “дуализма” и многокомпонентности  Развитие систем и предприятий, увеличение числа их филиалов и клиентов, повышение качества обслуживания и другое вызвали существенные изменения в разработке и функционировании АИС, в основном базирующиеся на сбалансированном сочетании двух предыдущих методов.
Новый подход ориентирован на специализированное программное обеспечение (СПО), возможность адаптации программного аппарата к практически любым условиям и различным требованиям инструктивных материалов и принятым правилам работы.
Такой подход лег в основу “принципа дуализма”. Его реализация потребовала построения АИС нового поколения в виде программных модулей, органически связанных между собой, но в то же время способных работать автономно.'''
					answer2 = '''
ОРИЕНТАЦИЯ за/против: 
•	"ПРОТИВ" - Относительно высокая дороговизна профессиональных СУБД
•	"ЗА" - Как правило, поставщиками практически всех профессиональных СУБД сейчас предлагаются масштабируемые решения, т.е. например, Enterprise Database - для крупных систем и WorkGroup Database - для средних и малых систем, причем цена последних сравнима с ценами на локальные СУБД.
•	"ПРОТИВ" - Профессиональные СУБД предъявляют высокие требования к аппаратной платформе.
•	"ЗА" - С резким ростом производительности Intel-ориентированных аппаратных платформ большинство производителей профессиональных СУБД выпустила свои версии и под Intel-сервера, в том числе и под ОС LINUX, а учитывая что LINUX при всей своей мощности UNIX системы практичсеки беспланая ОС, то и решение на ее основе как правило не повлечет больших финансовых затрат. Это позволяет при построении системы ориентироваться не только на высокопроизводительные многокластерные RISC сервера, но и использовать серверные Intel-платформы.
•	"ПРОТИВ" - Профессиональные АИС сложны и дороги в администрировании.
•	"ЗА" - Как правило, сложность администрирования зависит от конкретной АИС. Кроме этого, при эксплуатации АИС в многопрофильном банке или предприятии на UNIX платформе снимает многие проблемы, возникающие на местах, за счет широких возможностей удаленного администрирования из центра.
•	"ПРОТИВ" - Разработки АИС на промышленной платформе слишком дороги.
•	"ЗА" - Проектирование современных интегрированных систем - процесс трудоемкий, требующей высокой квалификации разработчиков. Все это находит отражение в цене и объективно делает АИС нового поколения более дорогими, но все же сравнимыми по стоимости с их предшественниками.
•	"ПРОТИВ" - Внедрение систем на профессиональной платформе процесс затяжной и дорогостоящий.
•	"ЗА" - Затяжка внедрения, как правило, обусловлена либо недостатком опыта фирмы поставщика по установке таких систем, либо недостаточной готовностью самого внедряемого продукта. Ориентировочный срок установки типовой АИС четвертого поколения под СУБД Oracle при отлаженном технологическом процессе составляет несколько недель.
•	"ПРОТИВ" - Сопровождение систем на базе профессиональной платформы неоправданно дорого, а качественные характеристики такой АИС оставляют желать лучшего.
•	"ЗА" - Во многом это предубеждение сложилось на основании опыта эксплуатации АИС зарубежного производства. Можно указать целый ряд случаев, когда зарубежные фирмы поставщики либо отказывались своевременно вносить изменения, обусловленные новыми инструкциями ЦБ, либо требовали за эти изменения неоправданно крупные суммы. Однако это совсем не относится к отечественным системам нового поколения, изначально рассчитанным на изменчивое российское законодательство.'''
					bot.send_message(mid, answer1)
					time.sleep(0.1)
					bot.send_message(mid, answer2)

				elif 'выполнение' in mt:
					answer = '''
CASE –ТЕХНОЛОГИИ. Выполнение пилотного проекта.

Перед полномасштабным внедрением выбранного CASE-средства в организации выполняется пилотный проект, целью которого является экспериментальная проверка правильности решений, принятых на предыдущих этапах, и подготовка к внедрению. 
Пилотный проект представляет собой первоначальное реальное использование CASE-средства в предназначенной для этого среде и обычно подразумевает более широкий масштаб использования CASE-средства по отношению к тому, который был достигнут во время оценки. Пилотный проект должен обладать многими из характеристик реальных проектов, для которых предназначено данное средство. Он преследует следующие цели: 
•	подтвердить достоверность результатов оценки и выбора; 
•	определить, действительно ли CASE-средство годится для использования в данной организации, и если да, то определить наиболее подходящую область его применения; 
•	собрать информацию, необходимую для разработки плана практического внедрения; 
•	приобрести собственный опыт использования CASE-средства.
Пилотный проект позволяет получить важную информацию, необходимую для оценки качества функционирования CASE-средства и его поддержки со стороны поставщика после того, как средство установлено. 
Важной функцией пилотного проекта является принятие решения относительно приобретения или отказа от использования CASE-средства. Провал пилотного проекта позволяет избежать более значительных и дорогостоящих неудач в дальнейшем, поскольку пилотный проект обычно связан с приобретением относительно небольшого количества лицензий и обучением узкого круга специалистов. 
Первоначальное использование новой CASE-технологии в пилотном проекте должно тщательно планироваться и контролироваться.'''
					bot.send_message(mid, answer)

				elif 'классификация' in mt:
					answer = '''
CASE –ТЕХНОЛОГИИ. Классификация CASE-средств.

Case-средства – программно-технологические средства специального класса, реализующих CASE-технологию создания и сопровождения ИС.
Все CASE-средства делятся на типы, категории и уровни.
Классификация по типам отражает функциональную ориентацию
CASE-средств на те или иные процессы ЖЦ. Классификация по типам в основном совпадает с компонентным составом CASE-средств и включает следующие основные типы:
•	средства анализа 
•	средства анализа и проектирования 
•	средства проектирования баз данных и файлов 
•	средства разработки приложений 
•	средства реинжиниринга 
•	средства окружения 
•	средства планирования управления проектом 
•	средства конфигурационного управления 
•	средства тестирования 
•	средства документирования 
Классификация по категориям определяет уровень интегрированности по выполняемым функциям и включает:
•	Вспомогательные программы 
•	Пакеты разработки 
•	Инструментальные средства 
Помимо этого, CASE-средства можно классифицировать по следующим признакам: 
•	применяемым методологиям и моделям систем и БД; 
•	степени интегрированности с СУБД; 
•	доступным платформам.'''
					bot.send_message(mid, answer)

				elif 'общая' in mt:
					answer = '''
CASE –ТЕХНОЛОГИИ. Общая характеристика CASE-средств.

Современные CASE-средства охватывают обширную область поддержки многочисленных технологий проектирования ЭИС: от простых средств анализа и документирования до полномасштабных средств автоматизации, покрывающих весь жизненный цикл ПО.
Наиболее трудоемкими стадиями разработки ПО являются стадии формирования требований и проектирования, в процессе которых CASE-средства обеспечивают качество принимаемых технических решений и подготовку проектной документации. При этом большую роль играют методы визуального представления информации. Это предполагает построение разнообразных графических моделей (диаграмм), использование многообразной цветовой палитры, сквозную проверку синтаксических правил. Графические средства моделирования предметной области позволяют разработчикам в наглядном виде изучать существующую ЭИС, перестраивать ее в соответствии с поставленными целями и имеющимися ограничениями.
В разряд CASE-средств попадают как относительно дешевые системы для персональных компьютеров с весьма ограниченными возможностями, так и дорогостоящие системы для неоднородных вычислительных платформ и операционных сред. Так, современный рынок программных средств насчитывает около 300 различныхCASE-средств, наиболее мощные из которых так или иначе используются практически всеми ведущими западными фирмами.
CASE-средствам присущи следующие основные особенности:
•	наличие мощных графических средств для описания и документирования системы, обеспечивающих удобный интерфейс с разработчиком и развивающих его творческие возможности;
•	интеграция отдельных компонентов CASE-средств, обеспечивающая управляемость процессом разработки ПО;
•	использование специальным образом организованного хранилища проектных метаданных (репозитория). Интегрированное CASE-средство (комплекс средств, поддерживающих полный ЖЦ ПО) содержит следующие компоненты:'''
					bot.send_message(mid, answer)

				elif 'разработка' in mt:
					keyboard = types.InlineKeyboardMarkup()
					callback_button1 = types.InlineKeyboardButton(text="Разработка программ и процедур. Разработка методов контроля и отчета", callback_data="guz5")
					callback_button3 = types.InlineKeyboardButton(text="... стратегии автоматизации", callback_data="vlad30")
					callback_button4 = types.InlineKeyboardButton(text="... стратегии развития предприятия", callback_data="vlad31")
					callback_button5 = types.InlineKeyboardButton(text="Физическая разработка. Разработка программ и процедур. Разработка методов контроля и отчета", callback_data="gosha51")
					callback_button6 = types.InlineKeyboardButton(text="... входов", callback_data="gosha52")
					keyboard.add(callback_button1)
					keyboard.add(callback_button3)
					keyboard.add(callback_button4)
					keyboard.add(callback_button5)
					keyboard.add(callback_button6)
					bot.send_message(mid, "Выбери", reply_markup=keyboard)

				elif 'технология' in mt:
					answer = '''
CASE –ТЕХНОЛОГИИ. Технология внедрения CASE-средств

Приведенная в данном разделе технология базируется в основном на стандартах IEEE (Institute of Electrical and Electronics Engineers - Институт инженеров по электротехнике и электронике). Термин "внедрение" используется в широком смысле и включает все действия от оценки первоначальных потребностей до полномасштабного использования CASE-средств в различных подразделениях организации-пользователя. Процесс внедрения CASE-средств состоит из следующих этапов :
•	определение потребностей в CASE-средствах;
•	оценка и выбор CASE-средств;
•	выполнение пилотного проекта;
•	практическое внедрение CASE-средств.
Процесс успешного внедрения CASE-средств не ограничивается только их использованием. На самом деле он охватывает планирование и реализацию множества технических, организационных, структурных процессов, изменений в общей культуре организации, и основан на четком понимании возможностей CASE-средств.
На способ внедрения CASE-средств может повлиять специфика конкретной ситуации. Например, если заказчик предпочитает конкретное средство, или оно оговаривается требованиями контракта, этапы внедрения должны соответствовать такому предопределенному выбору. В иных ситуациях относительная простота или сложность средства, степень согласованности или конфликтности с существующими в организации процессами, требуемая степень интеграции с другими средствами, опыт и квалификация пользователей могут привести к внесению соответствующих корректив в процесс внедрения.'''
					bot.send_message(mid, answer)

				elif 'входные' in mt:
					answer1 = '''
MRPII-система. Входные параметры для MRP-системы'''
					image = 'https://sun9-70.userapi.com/c200524/v200524967/1ee6c/nXVCWOxQDEI.jpg'
					answer2 = '''
Описание состояния материалов (Inventory Status File) является основным входным элементом MRP-программы. В нем должна быть отражена максимально полная информация обо всех материалах, необходимых для производства конечного продукта. В этом элементе указывается статус каждого материала участвующего в производственном процессе. Сначала создается пробная программа производства, впоследствии тестируемая на выполнимость дополнительным прогоном через CRP-систему (Capacity Requirements Planning), которая определяет достаточно ли производственных мощностей для ее осуществления. Если производственная программа признана выполнимой, то она автоматически формируется в основную и становится входным элементом MRP-системы. Это необходимо, потому как рамки требований по производственным ресурсам являются прозрачными для MRP-системы, которая формирует на основе производственной программы график возникновения потребностей в материалах. Однако, в случае недоступности ряда материалов или невозможности выполнить план заказов для поддержания реализуемой с точки зрения CRP производственной программы, MRP-система в свою очередь указывает о необходимости внести в нее корректировки.'''
					bot.send_message(mid, answer1)
					time.sleep(0.1)
					bot.send_photo(mid, image)
					time.sleep(0.1)
					bot.send_message(mid, answer2)

				elif 'выходные' in mt:
					answer = '''
MRPII-система. Выходные параметры для MRP-системы

Выходные данные включают первичные и вторичные отчёты, выполняющие вспомогательную функцию.
Первичные отчёты:
•	Плановые заказы — график с разбиением по периодам планирования, который содержит время и величину будущего заказа.
•	Разрешение на выполнение плановых заказов, то есть производится отпуск материалов в производство: пересчитывается остаток запаса с учётом расходов материалов, а затем материалы передаются непосредственно на производство, то есть производится выдача производственных заказов.
•	Изменение в плановых заказах включает изменение даты или величины заказа, а также отмену заказа.
Вторичные отчёты:
•	Отчёты по контролю за исполнением планов показывают отклонения от планов, а также содержат информацию, необходимую для расчёта производственных затрат.
•	Отчёты по планированию включают существующие договоры поставки, обязательства по закупкам и другие данные, которые могут использоваться для оценки будущих материальных потребностей производства.
•	Отчёты об исключительных ситуациях обращают внимание на основные несоответствия и обнаруженные ошибки в данных и отчётности.'''
					bot.send_message(mid, answer)

				elif 'модуль' in mt:
					keyboard = types.InlineKeyboardMarkup()
					callback_button1 = types.InlineKeyboardButton(text="... обратной связи", callback_data="aiym9")
					callback_button2 = types.InlineKeyboardButton(text="... потребности в материалах", callback_data="baha11")
					callback_button3 = types.InlineKeyboardButton(text="... продаж", callback_data="baha12")
					callback_button4 = types.InlineKeyboardButton(text="... производства", callback_data="baha13")
					callback_button5 = types.InlineKeyboardButton(text="... производственных мощностей", callback_data="baha14")
					keyboard.add(callback_button1)
					keyboard.add(callback_button2)
					keyboard.add(callback_button3)
					keyboard.add(callback_button4)
					keyboard.add(callback_button5)
					bot.send_message(mid, "Выбери", reply_markup=keyboard)

				elif 'физическая' in mt:
					answer = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Физическая разработка.

Разработка сложных ИС предприятий, невозможна без тщательно обдуманного методологического подхода.В настоящее время существует ряд общих методологий разработки ИС. Главное в них – единая дисциплина работы на всех этапах жизненного цикла системы, учет критических задач и контроль их решения, применение развитых инструментальных средств поддержки процессов анализа, проектирования и реализации ИС.
Для различных классов систем используются разные методы разработки, определяемые типом создаваемой системы и средствами реализации. Спецификации этих систем, в большинстве случаев, состоят из двух основных компонентов – функционального и информационного. Современные методы создания ИС разного назначения базируются в основном, на трех подходах: объектно-ориентированная технология, основанная на знаниях (интеллектуальная) технология и CASE-технология.
Физическая разработка - это перевод широких, ориентированных на пользователя требований, сформулированных на этапе концептуальной разработки, в детальные спецификации, которые могут быть использованы при кодировании я тестировании компьютерных программ. Разрабатываются входные и выходные документы, пишутся компьютерные программы, создаются файлы, разрабатываются процедуры, в новую систему встраиваются способы ее контроля.'''
					bot.send_message(mid, answer)

				elif 'стратегия' in mt:
					answer = '''
Стратегия автоматизации

Понятие стратегии автоматизации включает в себя базовые принципы, используемые при автоматизации предприятия. В ее состав входят следующие компоненты:
1) цели- области деятельности предприятия и последовательность, в которой они будут автоматизированы;
2) способ автоматизации: по участкам, направлениям, комплексная автоматизация;
3) долгосрочная техническая политика - комплекс внутренних стандартов, поддерживаемых на предприятии: типы стандартов на оборудование и ПО, перечень поставщиков и производителей базовых аппаратно-программных средств, на использование продукции которых ориентировано предприятие, перечень продуктов и линий продуктов, которые используются или которые предполагается использовать в области автоматизации; 
4) ограничения: финансовые, временные и т. д.; 
5) условия, при наступлении которых производится ревизия плана; 
6) анализ результатов выполнения плана; 
7) процедура управления изменениями плана.
Характеристики различных подходов автоматизации:
•	Хаотичная (кусочная) автоматизация:
	-	предполагает установку частей ИС по мере возможности;
	-	представляет собой всего лишь заплатку;
	-	является наиболее плохим вариантом с наименьшей эффективностью;
	-	отсутствие стратегии внедрения (стратегического плана);
	-	процесс внедрения определяется сиюминутными задачами.
•	Автоматизация по участкам:
	-	представляет собой процесс автоматизации отдельных производственных подразделений предприятия, объединенных по функциональному признаку (бухгалтерия);
	-	предполагает постепенное внедрение;
	-	процесс внедрения характеризуется большой трудоемкостью;
	-	в результате в организации происходят существенные изменения;
	-	чтобы автоматизация по участкам была эффективна, необходимы стратегический и оперативный планы автоматизации.
•	Автоматизация по направлениям:
	-	автоматизация направлений деятельности, таких как производство, сбыт, управление финансами;
	-	предполагает, что, меняя объект, мы изменяем предметную область;
	-	зависит от вида услуг, состава затрат;
	-	своеобразный конструктор, из которого можно создавать любые рабочие места;
	-	требует проведения реинжиниринга бизнес-процессов и создания модели всего предприятия.
•	Полная автоматизация:
	-	распространение систем автоматизации на все функции управления за счет системной интеграции при внедрении;
	-	предусматривает, что все задуманные функции автоматизированы;
	-	системная интеграция носит только внешний характер.
•	Комплексная автоматизация:
	-	вокруг ядра выстраивается оболочка - интеграция носит внутренний характер;
	-	высокие требования к качеству управления.'''
					bot.send_message(mid, answer)

				elif 'безопасность' in mt:
					answer = '''
Безопасность и идентификация в системах электронного документооборота.

Система электронного документооборота (СЭД) — автоматизированная многопользовательская система, сопровождающая процесс управления работой иерархической организации с целью обеспечения выполнения этой организацией своих функций. При этом предполагается, что процесс управления опирается на человеко-читаемые документы, содержащие инструкции для сотрудников организации, необходимые к исполнению.
Безопасный доступ к данным внутри СЭД обеспечивается аутентификацией и разграничением прав пользователя.
Обозначим процессы установления личности пользователя и процессы подтверждения легитимности пользователя на то или иное действие или информацию одним термином – аутентификацией, понимая под ним весь комплекс мероприятий, проводимых как на входе пользователя в систему, так и постоянно в течение его дальнейшей работы.
Здесь необходимо заострить внимание на методах аутентификации. Самый распространенный из них, конечно, парольный. Основные проблемы, которые сильно снижают надежность данного способа – это человеческий фактор. Даже если заставить пользователя использовать правильно сгенерированный пароль, в большинстве случаев его можно легко найти на бумажке в столе или под клавиатурой.
Недоказуемость от авторства, целостность и конфиденциальность обеспечиваются криптографическими методами. В настоящее время используется электронная цифровая подпись (ЭЦП) и шифрование. Эти средства реализуются при помощи асимметричной криптографии. У каждого сотрудника - пользователя системы ЭД - имеется два ключа (ключевая пара) – закрытый и открытый. При помощи закрытого ключа формируется ЭЦП и расшифровывается информация, предназначенная данному пользователю. Закрытый ключ должен быть доступен только его владельцу. Открытый ключ служит для проверки ЭЦП и шифрования и доступен любому пользователю информационной системы.
Для формирования электронной цифровой подписи и шифрования в СЭД используются криптопровайдеры – программные, программно-аппаратные средства. Необходимым является использование сертифицированных криптопровайдеров – это одно из основных условий для обеспечения юридической значимости СЭД.'''
					bot.send_message(mid, answer)

				elif 'задача' in mt:
					answer = '''
Задача планирования потребностей в материалах.

Задача планирования потребностей в материалах (Materials Requirements Planning, MRP) оказалась той первой задачей, которая привела к созданию целой индустрии программного обеспечения для управления предприятием.
Решение задачи планирования потребностей в материалах реализуется с помощью алгоритма, который также носит название MRP-алгоритма.
MRP-алгоритм - это алгоритм оптимального управления заказами на готовую продукцию, производством и запасами сырья и материалов.
MRP-методология — это реализация MRP-алгоритма с помощью компьютерной системы.
Реализация системы, работающей по этой методологии представляет собой компьютерную программу, позволяющую оптимально регулировать поставки комплектующих в производственный процесс, контролируя запасы на складе и саму технологию производства. Главной задачей MRP является обеспечение гарантии наличия необходимого количества требуемых материалов и комплектующих в любой момент времени в рамках срока планирования, наряду с возможным уменьшением постоянных запасов, а следовательно разгрузкой склада.
В настоящее время MRP системы присутствуют практически во всех интегрированных информационных системах управления предприятием.'''
					bot.send_message(mid, answer)

				elif 'производительность' in mt:
					answer = '''
ИНФОРМАЦИОННЫЕ ТЕХНОЛОГИИ КАК ОРУЖИЕ В КОНКУРЕНТНОЙ БОРЬБЕ. Управление.  Дифференциация продуктов и услуг. Производительность.

Организации действуют в мире грубых ошибок и вмешательства государства, непредсказуемой денежной, финансовой, налоговой и законодательной политики, экономических подъемов и спадов, внезапных изменений в торговой политике, внутренней и иностранной конкуренции, политических и общественных катаклизмов, неблагоприятных изменений на рынке, непредвиденного повышения трудовых затрат. Среда, в которой организации должны выживать, безжалостная и конкурентная по своей сути. Чтобы избежать неудачи, выжить и добиться успеха, организации должны использовать возможности таких факторов, как управление, дифференциация продукции и услуг, рост производительности.
Информация - оружие, которое помогает управлению, продукции и услугам, производительности вжиться в конкурентную среду. Однако само по себе очарование информационных технологий не продвинет эти факторы вперед. Необходимость бороться и выживать в свирепой конкурентной среде, особенно в среде, в которой действует жесткая иностранная конкуренция - вот что является побудительной причиной применения информационных технологий.'''
					image = 'https://sun9-72.userapi.com/c200524/v200524549/1f45c/wTXnu4_WlJQ.jpg'
					bot.send_message(mid, answer)
					time.sleep(0.1)
					bot.send_photo(mid, image)

				elif 'понятие' in mt:
					answer = '''
ИНФОРМАЦИЯ И ИНФОРМАЦИОННАЯ СИСТЕМА. Информационная перегрузка и ценность информации. Понятие информационной системы.

В результате сбора и обработки данных ЛПР (лицо, принимающее решение) получает в свое распоряжение информацию, которая обладает определенной ценностью. Ценность информации — это выгода, преимущество, которое дает предприятию информация за вычетом издержек при ее получении. Основные выгоды от информации – уменьшение неопределенности, принятие лучших решений и улучшение способности планировать деятельность. Основные издержки – время и ресурсы, затраченные на сбор данных и их обработку, хранение и предоставление информации.
К сожалению, определить истинную ценность информации не так просто. Во-первых, издержки, а особенно выгоду от информации трудно выразить количественно. Во-вторых, трудно определить ценность информации до того, как она будет получена и использована. Тем не менее, ожидаемая ценность информации должна быть вычислена хотя бы приблизительно, чтобы издержки, связанные с информацией, не превышали преимущества от ее использования.
Большинство людей считают, что чем больше информации - тем лучше. Это верно, но только до тех пор, пока люди могут воспринимать получаемый объем информации. В некоторый момент человек достигает состояния информационной перегрузки, когда дополнительная информация не может быть эффективно использована. Информационная перегрузка не является безобидной, так как при этом затрудняется процесс принятия решений и растут издержки, связанные с обеспечением излишка информации. В результате производство информации за порогом информационной перегрузки уменьшает ценность информации.
Для того, чтобы структурировать проблемы и помочь служащим организовать и обработать большие объемы информации существуют современные компьютерные технологии - ИС.
«Информационные системы» — это организованные средства сбора, ввода и обработки данных, а также хранения, управления, контроля и предоставления информации, предназначенные для того, чтобы предприятие могла достигнуть своих целей и выполнить свои задачи.'''
					bot.send_message(mid, answer)

				elif 'типовой' in mt:
					answer = '''
Типовой процесс внедрения ИС.

Существует два варианта внедрения: типовое и индивидуальное.
Типовое внедрение рекомендуется предприятиям, бизнес-процессы которых близки или идентичны схемам, заложенным в основу стандартных проектов. Использование общности черт и задач позволяет привязать готовые решения (модели и программы) к условиям конкретного пользователя и его задачам. Например, большинство организаций решает типовые задачи в бухгалтерском учете, финансах, организации управленческого труда, автоматизации документооборота, управлении кадрами и т.п. В рамках таких задач использование типовых решений будет оправданным и эффективным. Особенно это касается малого бизнеса. При типовом внедрении максимально используются штатные средства настройки ИС без изменения программного кода, и поэтому объем выполняемых работ ограничен:
• установка программного обеспечения;
• обучение пользователей;
• ввод в эксплуатацию программного обеспечения.'''
					bot.send_message(mid, answer)

				elif 'использование' in mt:
					answer = '''
ИНФОРМАЦИЯ И ПРЕДПРИЯТИЕ. Культура. Заинтересованные стороны. Цепочка создания ценностей. Использование ИС на пользу предприятию.

Организационная культура – это нормы и ценности, которые разделяются абсолютным большинством членов организации или предприятия, а так же внешние их проявления (организационное поведение).
Основные функции: 
внутренняя интеграция (дает понятие всем членам структуры о форме их взаимодействия друг с другом);
внешняя адаптация (адаптирует организацию к внешней среде).
Заинтересованная сторона — это лицо, группа лиц или организация, которые имеют определенные интересы относительно трансформации организации. 
Можно привести следующие примеры типичных интересов заинтересованных сторон:
— идентификация компетенций, подчиненности, ответственностей;
— обеспечение согласованности и полноты;
— снижение сложности;
— понимание влияния изменений;
— обеспечение гибкости;
— понимание структуры процессов/приложений;
— понимание движущих сил предприятия; и т. п.
Цепо́чка це́нности (англ. Value chain) — это инструмент стратегического анализа, направленный на подробное изучение деятельности организации с целью стратегического планирования. Конкурентное преимущество компании возникает как результат выполнения этих стратегических видов деятельности лучше конкурентов.
В большинстве компаний, вне зависимости от того, в какой отрасли она работает, присутствуют пять групп основных видов деятельности[2]:
входящая логистика;
операции;
исходящая логистика;
маркетинг и продажи;
сервис.
Информационные системы управления и предприятия имеют взаимное влияние друг на друга. С одной стороны ИСУ должны присоединиться к предприятию, чтобы обеспечить необходимой информацией важные группы внутри предприятия. В то же время предприятие должно сознавать и открывать себя влияниям ИСУ, чтобы извлечь выгоду из новых технологий, уникальность которых заключается в том, что «они дают возможность оптимизировать и рационализировать управленческую функцию за счет применения новых средств сбора, передачи и преобразования информации» [7].
Взаимодействие между ИСУ и предприятиями очень комплексно и подвержено влиянию большого числа факторов, включая структуру предприятия, стандартную технику эксплуатации, политику, культуру, окружающую среду, решения управления и т. д.'''
					bot.send_message(mid, answer)

				elif 'основные' in mt:
					keyboard = types.InlineKeyboardMarkup()
					callback_button1 = types.InlineKeyboardButton(text="Основные фонды.", callback_data="ras22")
					callback_button2 = types.InlineKeyboardButton(text="Основные этапы создания ИС.", callback_data="sasha41")
					keyboard.add(callback_button1)
					keyboard.add(callback_button2)
					bot.send_message(mid, "Выбери", reply_markup=keyboard)

				elif 'компоненты' in mt:
					answer = '''
КЛАССИФИКАЦИЯ ИНФОРМАЦИОННЫХ СИСТЕМ. Автоматизированные ИС. Компоненты информационной системы.

Автоматизированная информационная система (АИС) — совокупность программно-аппаратных средств, предназначенных для автоматизации деятельности, связанной с хранением, передачей и обработкой информации.
АИС являются, с одной стороны, разновидностью информационных систем (ИС), с другой — автоматизированных систем (АС), вследствие чего их часто называют ИС или АС.
АИС может быть определена как комплекс автоматизированных информационных технологий, предназначенных для информационного обслуживания – организованного непрерывного технологического процесса подготовки и выдачи потребителям научной, управленческой и др. информации, используемой для принятия решений, в соответствии с нуждами для поддержания эффективной деятельности.
Классическими примерами автоматизированных информационных систем являются банковские системы, автоматизированные системы управления предприятиями, системы резервирования авиационных или железнодорожных билетов и т. д.
Основной причиной создания и развития АИС является необходимость ведения учёта информации о состоянии и динамике объекта, которому посвящена система. На основании информационной картины, создаваемой системой, руководители различного звена могут принимать решения об управляющих воздействиях с целью решения текущих проблем.
Типы автоматизированных информационных систем:
АСУ — Автоматизированные системы управления
АСУП — Автоматизированные системы управления предприятия
АСКУЭ— Автоматизированная система контроля и учёта энергоресурсов
АСУ ТП — Автоматизированные системы управления технологическими процессами
ГИС — Геоинформационные системы
ИУС — Информационно-управляющие системы
ИИС — Информационно-измерительные системы
ИИС — Интеллектуальные информационные системы
ИПС — Информационно-поисковые системы
Первым компонентоми основной составляющей любой информационной системы являются функционально взаимосвязанные комплексы данных и процедур их обработки.
Второй компонент- это программные средства (процедуры) и технологии, обеспечивающие функционирование системы. Здесь обычно отдельно выделяют подсистему общего управления данными, а также процедуры специализированной функциональной обработки, отражающие требования предметной области.
Однако в наибольшей степени существо АИС выражается третьим компонентом- информационным фондом, который характеризуется не только содержащейся информацией, но и способом ее организации (модель данных), а также формой представления, которая, в свою очередь, определяется возможностями лингвистического обеспечения - языками представления и управления информацией.'''
					bot.send_message(mid, answer)

				elif 'задачи' in mt:
					answer = '''
КЛАССИФИКАЦИЯ ИНФОРМАЦИОННЫХ СИСТЕМ. Специфика информационных систем. Задачи информационных систем.

Перечень задач, которые должна решать информационная система, зависит от той прикладной сферы, для которой предназначена система. Область применения информационных приложений разнообразны: банковское дело транспорт, медицина, страхование, образование, промышленность и т.д.. Трудно найти сферу деловой активности, в которой сегодня можно обойтись без использования информационных систем.
Можно выделить по крайней мере 4 свойства, которые являются общими для всех информационных систем.
Во-первых, любая информационная система предназначена для сбора, хранения и обработки информации. Поэтому в основе любой информационной системы лежит среда хранения и доступа к данным. Сред еще должно обеспечить уровень надежности сохранения и эффективность доступа в области применения информационной системы. Информационные системы, как правило, предусматривают возможность работы система с нескольких рабочих мест. Некоторые из конечных пользователей изменяют содержимое базы данных (вводят, обновляют, изымают данные). Другие выполняют операции, связанные с выборкой из базы данных третьи, делают и то, и другое. 
Во-вторых, информационные системы ориентированы на конечного пользователя, например, кредитного инспектора. Такой пользователь может быть далеким от мира компьютеров. Для него терминал, персональный компьютер или рабочая станция представляют собой лишь средство его собственной профессиональной деятельности.
В сетевой информационной технологии организация обработки данных может быть централизованной или децентрализованной (распределенной). Централизованная организация данных является простой для реализации - на одном на сервере содержится единственная копия базы данных, все операции с базой данных обеспечиваются этим сервером.
Созданию автоматизированных информационных систем (1С) сегодня в РК уделяется много внимания. По масштабам, темпам роста, затратами материальных, финансовых и трудовых ресурсов, а также по ступеням влияния на процессы управления проблема создания 1С превратилась в большие экономические задачи.'''
					bot.send_message(mid, answer)

				elif 'методика' in mt:
					answer = '''
Методика BSP.

Методика BSP - подход, помогающий предприятию определить план создания информационных систем, удовлетворяющих его ближайшие и перспективные информационные потребности. Информация является одним из основных ресурсов и должна планироваться в масштабах всего предприятия . Информационная система проектируется независимо от текущего состояния и структуры предприятия. BSP основывается на нисходящем анализе информационных объектов и регламентирует 13 этапов выполнения работ. В начале выделяются три организационных этапа, обеспечивающих запуск проекта. Основой этих трех этапов является подготовка к анализу. На четвертом этапе формируется перечень основной деятельности предприятия и содержащихся в них бизнес-процессов.
Пятый этап выделяет основные классы данных (логически связанные категории данных). Таким образом, в итоге формируется матрица связи, где по вертикали приведены деятельности, реально необходимые для связей бизнес-процессов, а по горизонтали - необходимые классы данных. На пересечении строк и столбцов указывается тип доступа к классам данных.
Шестой этап - анализ существующих на предприятии деловых и системных взаимодействий. По аналогии с этапом пятым строятся следующие матрицы, демонстрирующие использование существующих и планируемых информационных подсистем:
1. Матрица руководители - процесс. Это основные обязанности руководителей и степень их вовлеченности в основные бизнес-процессы.
2. Матрица информационные системы – руководители. Показывает, какими системами, существующими или планируемыми, пользуются руководителями.
3. Информационные системы - процессы. Создается отношение между системами и бизнес-процессами.
4. Информационные системы – файлы данных. Соотношение между системами и файлами данных.
На седьмом этапе с использованием построенных матриц в беседе с руководителями решаются следующие задачи:
- уточнение матрицы;
- определение и оценка необходимой руководству информации;
- определение приоритетов потребностей;
- определение текущих задач;
- привлечение на свою сторону руководства .
Восьмой этап обрабатывает результаты седьмого этапа, где каждая выявленная проблема фиксируется с указанием ее возможного решения. Далее все проблемы разделяются на 3 вида:
1) проблемы, не относящиеся к автоматизации и не затрагивающие информационные системы;
2) проблемы, связанные с существующими информационными системами;
3) проблемы, связанные с будущими системами.
Информация о проблемах первого вида передается руководству предприятия для принятия соответствующих решений. Оставшиеся проблемы сортируются по бизнес-процессам.
На девятом этапе традиционными методами осуществляются проектирование архитектуры информационной системы.
Десятый этап определяет приоритеты в реализации и намечает последовательность ее этапов.
Этап одиннадцатый определяет планирование модификаций информационной системы в связи с построенным процессом появления новых требований к такой системе.
Этапы двенадцатый и тринадцатый заключаются в выработке рекомендаций и планов формирования отчетности по проведенным работам.
В дальнейшем осуществляются изменения, направленные на подготовку предприятия к использованию спроектированной информационной системы.'''
					bot.send_message(mid, answer)

				elif 'поэтапная' in mt:
					answer1 = '''
МОДЕЛИ ЖИЗНЕННОГО ЦИКЛА ПО. Поэтапная модель с промежуточным контролем.

Модель жизненного цикла программного обеспечения — структура, содержащая процессы действия и задачи, которые осуществляются в ходе разработки, использования и сопровождения программного продукта.
Эти модели можно разделить на 3 основных группы:
1.	Инженерный подход
2.	С учетом специфики задачи
3.	Современные технологии быстрой разработки
Теперь рассмотрим непосредственно существующие модели (подклассы) и оценим их преимущества и недостатки.
Модель кодирования и устранения ошибок
Совершенно простая модель, характерная для студентов ВУЗов. Именно по этой модели большинство студентов разрабатывают, ну скажем лабораторные работы.
Данная модель имеет следующий алгоритм:
1.	Постановка задачи
2.	Выполнение
3.	Проверка результата
4.	При необходимости переход к первому пункту
Модель также ужасно устаревшая. Характерна для 1960-1970 гг., по-этому преимуществ перед следующими моделями в нашем обзоре практически не имеет, а недостатки на лицо. Относится к первой группе моделей.
Каскадная модель жизненного цикла программного обеспечения (водопад)
Алгоритм данного метода, который я привожу на схеме, имеет ряд преимуществ перед алгоритмом предыдущей модели, но также имеет и ряд весомых недостатков.'''
					image1 = 'https://sun9-26.userapi.com/c200524/v200524956/1f230/FzEOVFyHR8k.jpg'
					answer2 = '''
Преимущества:
•	Последовательное выполнение этапов проекта в строгом фиксированном порядке
•	Позволяет оценивать качество продукта на каждом этапе
•	Недостатки:
•	Отсутствие обратных связей между этапами
•	Не соответствует реальным условиям разработки программного продукта
•	Относится к первой группе моделей.
Каскадная модель с промежуточным контролем (водоворот)
Данная модель является почти эквивалентной по алгоритму предыдущей модели, однако при этом имеет обратные связи с каждым этапом жизненного цикла, при этом порождает очень весомый недостаток: 10-ти кратное увеличение затрат на разработку. Относится к первой группе моделей.
V модель (разработка через тестирование)
Данная модель имеет более приближенный к современным методам алгоритм, однако все еще имеет ряд недостатков. Является одной из основных практик экстремального программирования.'''
					image2 = 'https://sun9-41.userapi.com/c200524/v200524956/1f237/S5l2DxsC_r8.jpg'
					answer3 = '''
Модель на основе разработки прототипа
Данная модель основывается на разработки прототипов и прототипирования продукта.
Прототипирование используется на ранних стадиях жизненного цикла программного обеспечения:
1.	Прояснить не ясные требования (прототип UI)
2.	Выбрать одно из ряда концептуальных решений (реализация сцинариев)
3.	Проанализировать осуществимость проекта
Классификация протопипов:
1.	Горизонтальные и вертикальные
2.	Одноразовые и эволюционные
3.	бумажные и раскадровки
Горизонтальные прототипы — моделирует исключительно UI не затрагивая логику обработки и базу данных.
Вертикальные прототипы — проверка архитектурных решений.
Одноразовые прототипы — для быстрой разработки.
Эволюционные прототипы — первое приближение эволюционной системы.
Модель принадлежит второй группе.
Спиральная модель жизненного цикла программного обеспечения
Спиральная модель представляет собой процесс разработки программного обеспечения, сочетающий в себе как проектирование, так и постадийное прототипирование с целью сочетания преимуществ восходящей и нисходящей концепции.'''
					image3 = 'https://sun9-32.userapi.com/c200524/v200524956/1f23f/A0AToze7n_s.jpg'
					answer4 = '''
Преимущества:
•	Быстрое получение результата
•	Повышение конкурентоспособности
•	Изменяющиеся требования — не проблема
Недостатки:
•	Отсутствие регламентации стадий
Третьей группе принадлежат такие модели как экстремальное программирование (XP), SCRUM, инкриментальная модель (RUP), но о них я бы хотел рассказать в отдельном топике.
Поэтапная модель с промежуточным контролем
Поэтапная модель с промежуточным контролем - это итерационная модель разработки ИС с циклами обратной связи между этапами. Преимущество такой модели заключается в том, что межэтапные корректировки обеспечивают меньшую трудоемкость по сравнению с каскадной моделью, однако время жизни каждого из этапов растягивается на весь период разработки.
Модель характеризуется следующими свойствами взаимодействия этапов:
- модель состоит из последовательно расположенных этапов (точно так же, как и «водопад»);
- каждый этап имеет обратную связь с предыдущими этапами;
- исправление ошибок происходит на каждом из этапов, сразу при выявлении проблемы -- это промежуточный контроль;
- этапы перекрываются во времени по причине наличия обратной связи: следующий этап не начинается, пока не завершится предыдущий; при первом проходе по модели вниз, как только обнаружена ошибка, осуществляется возврат снизу вверх к предыдущим этапам, которые повлекли ошибку. Таким образом, фактически этапы оказываются растянутыми во времени;
- результат появляется только в конце разработки, как и в модели «водопад».'''
					image4 = 'https://sun9-8.userapi.com/c200524/v200524956/1f251/Km7gu3nz8Rw.jpg'
					answer5 = '''
Критерием появления результата при модели «водоворот» является приемлемое качество продукта, то есть такое состояние продукта, когда наиболее критические для клиента ошибки устранены, а с наличием непринципиальных для жизнедеятельности системы ошибок клиент согласился -- данные ошибки описаны в документации и фактически переведены таким образом в разряд особенностей системы.'''
					bot.send_message(mid, answer1)
					time.sleep(0.1)
					bot.send_photo(mid, image1)
					time.sleep(0.1)
					bot.send_message(mid, answer2)
					time.sleep(0.1)
					bot.send_photo(mid, image2)
					time.sleep(0.1)
					bot.send_message(mid, answer3)
					time.sleep(0.1)
					bot.send_photo(mid, image3)
					time.sleep(0.1)
					bot.send_message(mid, answer4)
					time.sleep(0.1)
					bot.send_photo(mid, image4)
					time.sleep(0.1)
					bot.send_message(mid, answer5)

				elif 'спиральная' in mt:
					answer1 = '''
МОДЕЛИ ЖИЗНЕННОГО ЦИКЛА ПО. Спиральная модель

Модель жизненного цикла программного обеспечения — структура, содержащая процессы действия и задачи, которые осуществляются в ходе разработки, использования и сопровождения программного продукта.
Эти модели можно разделить на 3 основных группы:
1.	Инженерный подход
2.	С учетом специфики задачи
3.	Современные технологии быстрой разработки
Теперь рассмотрим непосредственно спиральную модель (оценим её преимущества и недостатки.
Спиральная модель жизненного цикла программного обеспечения
Спиральная модель представляет собой процесс разработки программного обеспечения, сочетающий в себе как проектирование, так и постадийное прототипирование с целью сочетания преимуществ восходящей и нисходящей концепции.'''
					image = 'https://sun9-32.userapi.com/c200524/v200524956/1f23f/A0AToze7n_s.jpg'
					answer2 = '''
Преимущества:
•	Быстрое получение результата
•	Повышение конкурентоспособности
•	Изменяющиеся требования — не проблема
Недостатки:
•	Отсутствие регламентации стадий
Третьей группе принадлежат такие модели как экстремальное программирование (XP), SCRUM, инкриментальная модель (RUP), но о них я бы хотел рассказать в отдельном топике.
'''
					bot.send_message(mid, answer1)
					time.sleep(0.1)
					bot.send_photo(mid, image)
					time.sleep(0.1)
					bot.send_message(mid, answer2)

				elif 'подход' in mt:
					answer = '''
Подход TQM/CPI.

Continuous Process Improvement / Total Quality Management
В основе подхода лежит концепция управления качества выпускаемой продукции. Качество должно удовлетворять настоящим и будущим потребностям потребителя, что требует постоянного совершенствования производства. Для решения этой задачи Деминг предложил 14 принципов для предприятий произвольных типов и различных масштабов. Данные принципы представляют собой основу трансформации промышленности.
1. Постоянное совершенствование товара или услуги:
- долгосрочное планирование;
- использование новых технологий и материалов;
- затраты на исследование и образование.
2. Новая философия производства.
Производственный брак, ошибки, «получающие», а не зарабатывающие деньги сотрудники; неэффективный контроль, некомпетентное руководство, неквалифицированный персонал; подсиживание и донос, вандализм по отношению к средствам производства – все это ведет к недовольству своей работой и недобросовестному исполнению своих обязанностей.
3. Отказ от массового контроля.
Контроль качества готового товара является дорогостоящей и запоздалой мерой, подразумевающей планирование брака. Качество готового товара невозможно улучшить.
4. Установление долгосрочных партнерских отношений.
5. Постоянное совершенствование системы производства и обслуживания. Основа принципа - то, что каждый следующий заказ должен выполняться лучше предыдущего.
6. Обучение руководства.
7. Функция руководителя – это руководство, а не надзор. Руководитель должен знать работу, которую он контролирует.
8. Устранение страха. Если человек не чувствует себя защищенным, боится высказывать идеи и задавать вопросы, чтобы не потерять работу, он никогда не достигнет лучших показателей.
9. Разрушение барьеров между подразделениями.
10. Отмена лозунгов.
11. Отказ от количественных показателей. Нормативы устанавливаются из расчета на среднего рабочего. Способные делать больше ограничиваются нормой. Те, кто не может, производят брак, принося убытки. Еще хуже сдельная работа, откровенно стимулирующая брак.
12. Поддержка профессиональной гордости. Устранять препятствия, лишающие людей возможности гордиться своей работой.
13. Поощрение образования и совершенствования.
14. Необходимые действия для осуществления изменений.
-инициатива изменений исходит, как правило, от руководителей среднего звена. Именно здесь лежит слой бизнес-правил и происходит понимание необходимости внесения в них изменений;
-убеждение высшего руководства, получение его согласия и поддержки в проведении изменений;
-необходимость объяснения сотрудником цели проводимых изменений и привлечение их для участия в этом процессе;
-создание группы, перед которой ставится задача совершенствования качества.'''
					bot.send_message(mid, answer)

				elif 'требования' in mt:
					answer1 = '''
Требования к корпоративным информационным системам

Исторически сложился ряд требований к корпоративным информационным системам. Требования эти таковы:
1.	Системность;
2.	Комплексность;
3.	Модульность;
4.	Открытость;
5.	Адаптивность;
6.	Надежность;
7.	Безопасность;
8.	Масштабируемость;
9.	Мобильность;
10.	Простота в изучении;
11.	Поддержка внедрения и сопровождения со стороны разработчика.
Рассмотрим эти требования подробнее.
В современных условиях производство не может существовать и развиваться без высоко эффективной системы управления, базирующейся на самых современных информационных технологиях. Постоянно изменяющиеся требования рынка, огромные потоки информации научно-технического, технологического и маркетингового характера требуют от персонала предприятия, отвечающего за стратегию и тактику развития высокотехнологического предприятия быстроты и точности принимаемых решений, направленных на получение максимальной прибыли при минимальных издержках. Оптимизация затрат, повышение реактивности производства в соответствии со все возрастающими требованиями потребителей в условиях жесткой рыночной конкуренции не могут базироваться только на умозрительных заключениях и интуиции даже самых опытных сотрудников. Необходим всесторонний контроль над всеми центрами затрат на предприятии, сложные математические методы анализа, прогнозирования и планирования, основанные на учете огромного количества параметров и критериев и стройной системе сбора, накопления и обработки информации. Экстенсивные пути решения этой проблемы, связанные с непомерным разрастанием управленческого аппарата, даже при самой хорошей организации его работы не могут дать положительный результат. Переход на современные технологии, реорганизация производства не могут обойти и такой ключевой аспект как управление. И путь здесь может быть только один - создание КИС, отвечающей ряду жестких требований.'''
					answer2 = '''
КИС, прежде всего, должна отвечать требованиям комплексности и системности. Она должна охватывать все уровни управления от корпорации в целом с учетом филиалов, дочерних фирм, сервисных центров и представительств, до цеха, участка и конкретного рабочего места и работника. Весь процесс производства с точки зрения информатики представляет собой непрерывный процесс порождения, обработки, изменения, хранения и распространения информации. Каждое рабочее место - будь то рабочее место сборщика на конвейере, бухгалтера, менеджера, кладовщика, специалиста по маркетингу или технолога - это узел, потребляющий и порождающий определенную информацию. Все такие узлы связаны между собой потоками информации, овеществленными в виде документов, сообщений, приказов, действий и т.п. Таким образом, функционирующее предприятие можно представить в виде информационно-логической модели, состоящей из узлов и связей между ними. Такая модель должна охватывать все аспекты деятельности предприятия, должна быть логически обоснована и направлена на выявление механизмов достижения основной цели в условиях рынка - максимальной прибыли, что и подразумевает требование системности. Достаточно эффективное решение этой задачи возможно только на базе строгого учета максимально возможного обоснованного множества параметров и возможности многокритериальных поливариантных анализа, оптимизации и прогнозирования - то есть комплексности системы.
Информация в такой модели носит распределенный характер и может быть достаточно строго структурирована на каждом узле и в каждом потоке. Узлы и потоки могут быть условно сгруппированы в подсистемы, что выдвигает еще одно важное требование к КИС - модульность построения. Это требование также очень важно с точки зрения внедрения системы, поскольку позволяет распараллелить, облегчить и, соответственно, ускорить процесс инсталляции, подготовки персонала и запуска системы в промышленную эксплуатацию. Кроме того, если система не создается под конкретное производство, а приобретается на рынке готовых систем, модульность позволяет исключить из поставки компоненты, которые не вписываются в инфологическую модель конкретного предприятия или без которых на начальном этапе можно обойтись, что позволяет сэкономить средства.
Поскольку ни одна реальная система, даже если она создается по специальному заказу, не может быть исчерпывающе полной (нельзя объять необъятное) и в процессе эксплуатации может возникнуть необходимость в дополнениях, а также в силу того, что на функционирующем предприятии могут быть уже работающие и доказавшие свою полезность компоненты КИС, следующим определяющим требованием является открытость. Это требование приобретает особую важность, если учесть, что автоматизация не исчерпываются только управлением, но охватывает и такие задачи, как конструкторское проектирование и сопровождение, технологические процессы, внутренний и внешний документооборот, связь с внешними информационными системами (например, Интернет), системы безопасности и т.п.'''
					answer3 = '''
Любое предприятие существует не в замкнутом пространстве, а в мире постоянно меняющегося спроса и предложения, требующем гибко реагировать на рыночную ситуацию, что может быть связано иногда с существенным изменением структуры предприятия и номенклатуры выпускаемых изделий или оказываемых услуг. Кроме того, в условиях переходной экономики законодательство имеет неустоявшийся, динамично меняющийся характер. У крупных корпораций, к тому же могут быть экстерриториальные подразделения, находящиеся в зоне юрисдикции других стран или свободных экономических зон. Это означает, что КИС должна обладать свойством адаптивности, то есть гибко настраиваться на разное законодательство, иметь разноязыковые интерфейсы, уметь работать с различными валютами одновременно. Не обладающая свойством адаптивности система обречена на очень непродолжительное существование, в течение которого вряд ли удастся окупить затраты на ее внедрение. Желательно, чтобы кроме средств настройки система обладала и средствами развития - инструментарием, при помощи которого программисты и наиболее квалифицированные пользователи предприятия могли бы самостоятельно создавать необходимые им компоненты, которые органично встраивались бы в систему.
Когда КИС эксплуатируется в промышленном режиме, она становится незаменимым компонентом функционирующего предприятия, способным в случае аварийной остановки застопорить весь процесс производства и нанести громадные убытки. Поэтому одним из важнейших требований к такой системе является надежность ее функционирования, подразумевающая непрерывность функционирования системы в целом даже в условиях частичного выхода из строя отдельных ее элементов вследствие непредвиденных и непреодолимых причин.
Чрезвычайно большое значение для любой крупномасштабной системы, содержащей большое количество информации, имеет безопасность. Требование безопасности включает в себя несколько аспектов:'''
					answer4 = '''
Защита данных от потери. Это требование реализуется, в основном, на организационном, аппаратном и системном уровнях. Прикладная система, какой является, например АСУ, не обязательно должна содержать средства резервного копирования и восстановления данных. Эти вопросы решаются на уровне операционной среды.
Сохранение целостности и непротиворечивости данных. Прикладная система должна отслеживать изменения во взаимозависимых документах и обеспечивать управление версиями и поколениями наборов данных.
Предотвращение несанкционированного доступа к данным внутри системы. Эти задачи решаются комплексно как организационными мероприятиями, так и на уровне операционных и прикладных систем. В частности, прикладные компоненты должны иметь развитые средства администрирования, позволяющие ограничивать доступ к данным и функциональным возможностям системы в зависимости от статуса пользователя, а также вести мониторинг действий пользователей в системе.
Предотвращение несанкционированного доступа к данным извне. Решение этой части проблемы ложится в основном на аппаратную и операционную среду функционирования КИС и требует ряда административно-организационных мероприятий.
Предприятие, успешно функционирующее и получающее достаточную прибыль, имеет тенденцию к росту, образованию дочерних фирм и филиалов, что в процессе эксплуатации КИС может потребовать увеличения количества автоматизированных рабочих мест, увеличения объема хранимой и обрабатываемой информации. Кроме того, для компаний типа холдингов и крупных корпораций должна быть возможность использовать одну и ту же технологию управления как на уровне головного предприятия, так и на уровне любой, даже небольшой входящей в него фирмы. Такой подход выдвигает требование масштабируемости.
На определенном этапе развития предприятия рост требований к производительности и ресурсам системы может потребовать перехода на более производительную программно-аппаратную платформу. Чтобы такой переход не повлек за собой кардинальной ломки управленческого процесса и неоправданных капиталовложений на приобретение более мощных прикладных компонентов, необходимо выполнение требования мобильности.
Простота в изучении - это требование, включающее в себя не только наличие интуитивно понятного интерфейса программ, но и наличие подробной и хорошо структурированной документации, возможности обучения персонала на специализированных курсах и прохождения ответственными специалистами стажировки на предприятиях родственного профиля, где данная система уже эксплуатируется.
Поддержка разработчика. Это понятие включает в себя целый ряд возможностей, таких, как получение новых версий программного обеспечения бесплатно или с существенной скидкой, получение дополнительной методической литературы, консультации по горячей линии, получение информации о других программных продуктах разработчика, возможность участия в семинарах, научно-практических конференциях пользователей и других мероприятиях, проводимых разработчиком или группами пользователей и т.д. Естественно, что обеспечить такую поддержку пользователю способна только серьезная фирма, устойчиво работающая на рынке программных продуктов и имеющая довольно ясную перспективу на будущее.'''
					answer5 = '''
Сопровождение. В процессе эксплуатации сложных программно-технических комплексов могут возникать ситуации, требующие оперативного вмешательства квалифицированного персонала фирмы-разработчика или ее представителя на месте. Сопровождение включает в себя выезд специалиста на объект заказчика для устранения последствий аварийных ситуаций, техническое обучение на объекте заказчика, методическую и практическую помощь при необходимости внести изменения в систему, не носящие характер радикальной реструктуризации или новой разработки. Подразумевается также установка новых релизов программного обеспечения, получаемого от разработчика бесплатно силами уполномоченной разработчиком сопровождающей организации или силами самого разработчика.
Резюме: КИС должна отвечать требованиям:
1.	Комплексности и системности;
2.	Модульности;
3.	Открытости;
4.	Надежности;
5.	Безопасности;
6.	Масштабируемости;
7.	Мобильности;
8.	Простоты в освоении;
9.	Поддержки со стороны разработчика;
10.	Сопровождения разработчиком или его представителем.
В свою очередь, прикладная система, каковой является АСУ, выдвигает ряд требований к среде, в которой она функционирует. Средой функционирования прикладной системы являются сетевая операционная система, операционные системы на рабочих станциях, система управления базами данных и ряд вспомогательных подсистем, обеспечивающих функции безопасности, архивации и т.п. Как правило, список этих требований и указания по конкретному набору системного программного обеспечения содержатся в документации по конкретной прикладной системе.'''
					bot.send_message(mid, answer1)
					time.sleep(0.1)
					bot.send_message(mid, answer2)
					time.sleep(0.1)
					bot.send_message(mid, answer3)
					time.sleep(0.1)
					bot.send_message(mid, answer4)
					time.sleep(0.1)
					bot.send_message(mid, answer5)

				elif 'элементы' in mt:
					answer = '''
Системы электронного документооборота. Элементы.

Компоненты системы электронного документооборота и их функции
Система электронного документооборота в компании должна содержать следующие элементы:
•	модуль электронного делопроизводства (регистрация входящих/исходящих документов);
•	модуль электронного архива со средствами поиска документов и комплектом шаблонов документов;
•	модуль WorkFlow - электронное движение и согласование документов;
•	модуль сквозного контроля исполнения поручений;
•	модуль информационно-защищенного обмена документами между юридическими лицами и/или удаленными филиалами;
•	модуль генерации отчетов о движении документов;
•	модуль коллективной работы с документами.
Если же система электронного документооборота также применяется для автоматизации процессов управления, то добавляются:
•	модуль на основе WorkFlow для планирования, управления и мониторинга за ходом процессов;
•	модуль развернутой аналитики и план/фактного выполнения процессов.
Система автоматизации документооборота складывается из нескольких подсистем. Каждая подсистема обладает набором специфических для нее функций. При этом отдельные подсистемы тесно взаимодействуют между собой. Разделение системы документооборота на подсистемы, предпринимаемое нами, носит несколько “академический” характер. В реальной практике программные продукты достаточно условно можно отнести к той или иной группе в нашей классификации. Как правило, системы реализуют лишь часть функций, описанных ниже, при этом продукт одного класса может включать в себя часть функций систем другого класса.
Можно выделить следующие подсистемы автоматизации документооборота:
•	подсистема автоматизации делопроизводства;
•	архивы документов;
•	подсистема ввода документов и обработки образов документов;
•	подсистема управления стоимостью хранения документов;
•	подсистема маршрутизации документов;
•	подсистема комплексной автоматизации бизнес-процессов.'''
					bot.send_message(mid, answer)

				elif 'определение' in mt:
					answer1 = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Анализ системы. Анализ возможностей. Определение информационных потребностей и требований к системе.

Создание ИС – это логически сложная, трудоемкая и длительная работа, требующая высокой квалификации участвующих в ней специалистов. Но нередко создание таких систем выполняется на интуитивном уровне с применением неформализованных методов, основанных на искусстве, практическом опыте, экспертных оценках и дорогостоящих экспериментальных проверках качества функционирования системы. Эксплуатационные расходы, возникающие после сдачи таких систем, могут существенно превышать расходы на их создание. Исследования показывают, что на обнаружение ошибок, допущенных на стадии проектирования, расходуется примерно в два раза больше времени, чем на исправление ошибок, допущенных на последующих фазах. При этом исправление ошибки на стадии проектирования стоит в 2 раза, на стадии тестирования – в 10 раз, а на стадии эксплуатации системы – в 100 раз дороже, чем на стадии анализа. Кроме того, ошибки анализа и проектирования обнаруживаются часто самими пользователями, что вызывает их недовольство и осложняет сопровождение ИС.
При системном анализе информационных систем и процессов рассмотрение связано с вопросами логического или информационного моделирования систем. Модель «черного ящика» описывает общее представление системы и создается на начальном этапе моделирования. Этот вид модели не позволяет специалисту отобразить, а аналитику увидеть внутреннее устройство системы, ее структурные единицы. Модель «черного ящика» призвана отобразить входные и выходные воздействия системы с внешней средой или другими системами. Эти связи обобщенно отображаются на модели и дают общее представление о положении системы и ее значении
Исследования возможностей информационных систем, проводимые пользовате¬лями самостоятельно, могут содержать грубые ошибки. В результате, растущие требования к скорости и качеству обработки данных оказываются не выполнены и возникают значительные трудности в эксплуатации систем.
Неопытный персонал предприятия может недооценить как необходимую информацию для проведения расчетов, так и уровень сложности программного обеспечения.
После признания проекта осуществимым, компания подробно определяет информационные потребности и документирует требования к системе. Даже для относительно простых ИС определение информационных нужд может быть очень сложным процессом из-за огромного количества и разнообразия информации, которая требует определения. Вдобавок, для служащих очень часто представляет трудность определить свои информационные потребности или они определяют их неточно. '''
					
					answer2 = '''
При всей своей сложности данный этап является очень ответственным, т.к. исправление недочетов, допущенных в этом месте, стоит впоследствии больших затрат.
Следующий шаг - определение целей системы. Как правило, в качестве целей конкретизируются такие показатели как полезность производимой информации, надежность, доступность, своевременность получаемой информации, обладание достаточной мощностью, экономическая эффективность, гибкость, безопасность, управляемость, контролируемость ИС, улучшение обслуживания клиентов.
И наконец - определение ограничений. Успех разработки ИС часто зависит от понимания ограничений, в которых работает компания: требования законодательства, политика руководства, недостаток квалифицированного персонала, возможности и настроения пользователей, доступные технологии, ограниченные финансовые ресурсы.
Для определения требований к системе используются различные методики: опрос пользователей об их потребностях, анализ существующей системы, исследование ее применения, использование прототипа новой системы.
Результатом этапа является детальное описание требований к новой ИС.'''
					bot.send_message(mid, answer1)
					time.sleep(0.1)
					bot.send_message(mid, answer2)

				elif 'хранение' in mt:
					answer1 = '''
ЦИКЛ ОБРАБОТКИ ДАННЫХ. Ввод данных. Хранение данных.

ЭТАПЫ ЦИКЛА ОБРАБОТКИ ДАННЫХ
ИС выдает информацию о хранящихся учетных записях для планирования, оценки и принятия решений. Компьютерная ИС переводит данные об операциях в машиночитаемую форму и вводит их в компьютер. После обработки данные сохраняются в форме, пригодной для компьютера, а для пользователей преобразуются в форму, удобную для чтения человеком. Операции, которые выполняются с данными в компьютерных системах, чтобы произвести информацию, образуют цикл обработки данных. Рисунок 2.1 показывает четыре его этапа: ввод данных, хранение данных, обработка данных и вывод информации. В следующих четырех разделах эти этапы обсуждаются более подробно.
Менеджеры и бухгалтеры являются экспертами организации, которые играют важную роль в цикле обработки данных. Они должны взаимодействовать с системными аналитиками, чтобы помочь им ответить на такие вопросы, как например: Какие данные должны вводиться и храниться организацией, кто должен иметь доступ к ним? Как должны храниться данные: на бумаге, в файлах или в базе данных? Как эти данные должны организовываться, корректироваться, храниться, кому и как предоставляться? Как учитывать не только ожидаемую, но и непредвиденную информацию? Чтобы отвечать на эти и подобные вопросы, эксперты должны понимать концепции цикла обработки данных. 
ВВОД ДАННЫХ
На этапе ввода данных сведения об операциях собираются и преобразуются в форму, пригодную для машинной обработки.
Один из способов сбора данных состоит в использовании в качестве исходного документа заранее отпечатанной формы, в которую и вписываются данные операции. Примерами внутренних форм могут быть заказ на продажу, требование на приобретение, отчеты, табель рабочего времени. Внешние формы - счет-фактура поставщика, чеки, банковские переводы, предложения клиентов. Сначала исходные документы собираются в пакеты, а затем сканируются или вводятся в систему вручную.
Данные могут также быть введены с использованием оборотного документа, содержащего какие-нибудь данные компании, посылаемый в стороннюю организацию, а затем возвращенный системе как ввод. Оборотные документы готовятся в машиночитаемой форме, чтобы облегчить их последующую обработку как входных записей.
Данные могут также быть введены с клавиатуры терминала или микро-ЭВМ. Например, банковский кассир вводит код счета клиента, когда деньги кладутся или снимаются с него.'''
					answer2 = '''
Автоматизированные устройства сбора исходных данных предназначены для перевода данных об операциях в машиночитаемую форму непосредственно во время и на месте их происхождения. Примером служат денежные автоматы, используемые банками и сканеры, используемые в розничных магазинах.
Для того, чтобы облегчить последующую обработку, ввод данных может также потребовать следующую подготовку:
•	Классификация с помощью назначения кодов идентификации (номер счета, номер отдела, и т.п.) для записей данных, которая должна базироваться на предопределенной системе, например, на плане счетов.
•	Проверка, чтобы гарантировать точность данных. Гораздо дешевле и эффективнее предотвращать ошибки ввода данных, чем искать и исправлять их в момент ввода или когда они уже в системе.
•	Передача из одного места в другое. Например, большинство банковских денежных автоматов (automated teller machine - ATM) собирают и пересылают данные о проведенных операциях в главный офис для обработки.
ХРАНЕНИЕ ДАННЫХ
Данные компании - один из ее наиболее важных ресурсов. Тем не менее, само по себе существование актуальных данных не гарантирует их полезность. Чтобы нормально функционировать, организация должна иметь постоянный и легкий доступ к своим данным. Поэтому те, для кого эти данные предназначены, должны понимать, как данные организовываются и хранятся в ИС и как к ним можно получить доступ. В сущности, им нужно знать, как управлять данными для получения максимальной выгоды от их совместного использования.'''
					bot.send_message(mid, answer1)
					time.sleep(0.1)
					bot.send_message(mid, answer2)

				elif 'обследование' in mt:
					answer = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Анализ системы. Начальное исследование. Обследование системы.

Суть этапа анализа системы - сбор информации, необходимой для приобретения или разработки новой системы. Чтобы максимизировать использование ограниченных ресурсов, требования к разработке системы ранжируются по степени важности. После начального этапа производится исследование используемой в данный момент ИС, чтобы определить ее природу, нацеленность и понять сильные и слабые стороны. Если возможно, определяются и документируются информационные потребности пользователей системы и менеджеров. Все это используется для разработки и документирования требований к системе. 
Далее требования к системе используются для выбора между разработкой и приобретением ИС. Руководству предоставляется отчет об анализе системы.'''
					bot.send_message(mid, answer)

				elif 'тестирование' in mt:
					answer = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Внедрение ИС. Выбор и обучение персонала. Тестирование системы.

Внедрение - это этап, на котором соединяются воедино все элементы системы и начинается ее деятельность. 
Это очень ответственный и сложный этап, поэтому подготавливается и строго выполняется план внедрения. 
Как часть внедрения, устанавливается и тестируется все новое оборудование и программы, нанимается или обучается персонал, тестируются (и возможно корректируются) новые процедуры обработки данных, отрабатываются стандарты и способы контроля новой ИС, делается подробное документирование. 
В конце этого этапа происходит демонтаж старой системы и переход на новую.'''
					bot.send_message(mid, answer)

				elif 'эксплуатация' in mt:
					answer = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Внедрение ИС. Документирование системы. Переход на новую систему. Эксплуатация и обслуживание системы.

Внедрение - это этап, на котором соединяются воедино все элементы системы и начинается ее деятельность. 
Это очень ответственный и сложный этап, поэтому подготавливается и строго выполняется план внедрения. 
Как часть внедрения, устанавливается и тестируется все новое оборудование и программы, нанимается или обучается персонал, тестируются (и возможно корректируются) новые процедуры обработки данных, отрабатываются стандарты и способы контроля новой ИС, делается подробное документирование. 
В конце этого этапа происходит демонтаж старой системы и переход на новую.'''
					bot.send_message(mid, answer)

				elif 'вывод' in mt:
					answer1 = '''
ЦИКЛ ОБРАБОТКИ ДАННЫХ. Обработка данных. Организация обработки файлов. Вывод информации.

ОБРАБОТКА ДАННЫХ
Наиболее общим типом обработки данных являются операции над данными - периодическое выполнение операций для коррекции хранящихся данных. Обычно используются четыре вида операций с данными. Добавление - включение новых записей в файл. Удаление - уничтожение записи в файле. Обновление - периодическая коррекция существующих записей, например, увеличение или уменьшение текущего баланса на сумму оформленной сделки. Изменение - обновление полей, которое происходит нерегулярно, например, при изменении кредитных ставок или почтового адреса.

ОРГАНИЗАЦИЯ ОБРАБОТКИ ФАЙЛОВ
Файлы также различаются в зависимости от того, когда обрабатываются операции. Операции можно использовать для обновления главных файлов по мере их поступления или они могут временно сохраняться, а затем обрабатываться группами. Рассмотрим  эти два метода.

Пакетная обработка
Обработка операций в группах называется пакетной обработкой. Обработка происходит в заданные моменты времени (например, ежечасно или ежедневно) или всякий раз, когда будет собрано заранее оговоренное количество (от 50 до 100, например) исходных документов. Она наиболее подходит для обработки операций, которые происходят в больших количествах, например, платежной ведомости или кредитных счетов. Операции, объединенные в пакет, могут обрабатываться с помощью методов последовательного или прямого доступа. Дистанционная пакетная обработка происходит, когда записи об операциях записаны в машиночитаемой форме в нескольких географически удаленных друг от друга местах и в электронном виде передаются в центр обработки. 
При пакетной обработке входами для процедуры обновления главного файла служат старый главный файл и файл операций. Прежде чем операции могут быть обработаны, они должны быть собраны с помощью электроники, отсортированы в том же порядке, что и главный файл (если будут обрабатываться последовательно) и освобождены от ошибок и неполных данных. Затем для каждого пакета должны быть сгенерированы контрольные суммы. Примерами контрольных сумм являются общее количество обрабатываемых операций или их денежная сумма. Эти же суммы вычисляться затем на дальнейших этапах обработки и сравниваются с исходными суммами, чтобы проверить, все ли данные обработаны.
Выходами пакетной обработки являются новый главный файл и отчеты для внешних и внутренних пользователей. Например, программа обработки платежных ведомостей должна выдавать чеки и отчет об операциях, в котором перечисляются все обработанные сделки, а также контрольные суммы. Кроме того, должен составляться отчет об ошибках, обнаруженных системой во время обработки.'''
					answer2 = '''
Онлайновая обработка
При онлайновой пакетной обработке компьютер собирает данные в электроном виде и сохраняет для дальнейшей обработки. Например, банк может собирать данные, использующие онлайновые терминалы, а обрабатывать собранные операции лишь после закрытия, в конце дня. При онлайновой обработке в реальном времени, компьютер собирает данные в электронном виде, редактирует их для точности и полноты и сразу обрабатывает. Кроме того, компьютер обрабатывает информационные запросы от пользователей на поиск нужной им информации в файлах данных и отображение ее в определенном формате. Примеры онлайновых систем, работающих в реальном времени - системы бронирования авиабилетов и система котировок акций Нью-Йоркской фондовый биржи. Онлайновая пакетная и онлайновая обработка в реальном времени иллюстрируются на 
Многие компании используют системы обработки в реальном времени из-за преимуществ, которые они дают в конкурентной борьбе. Например, несколько лет тому назад почтовая служба США Federal Express внесла в свой устав как одну из целей организации фразу "эффективный контроль за пересылкой каждого пакета будет поддерживаться с использованием систем электронного учета, работающих в реальном времени." Сейчас компания имеет систему реального времени, которая может сообщить точное место нахождения каждого пакета и оценить время его доставки. Federal Express также предоставляет клиентам программное обеспечение для ПК, которое позволяет им отслеживать их пакеты самостоятельно.
Эффективность является основным преимуществом пакетной обработки только если речь идет о многих аналогичных операциях, которые можно обрабатывать одновременно, а не по мере их появления. Однако, поскольку все равно сделки собираются по мере их появления, онлайновый метод является более оперативным. Он обеспечивает и большую точность, поскольку система может отклонять неполные или ошибочные операции и сразу после ввода требовать корректировки ошибок. При онлайновом обновлении записи главного файла отражают текущее состояние дел и пользователи могут получать свежую информацию. При пакетной обработке главные файлы показывают текущее состояние только сразу после коррекции, которая может происходить один раз в день или в неделю.

ВЫВОД ИНФОРМАЦИИ
Последний шаг цикла обработки данных - вывод информации. В этом разделе обсуждаются форматы, цели и обязанности пользователей, связанные с выводом.
Формы вывода информации
Информация представляется в трех формах: документ, отчет или ответ на запрос. Документы - это записи операций или других данных компании. Некоторые из них, например, чеки и счет-фактуры, передаются другим организациям. Другие, например, отчеты о дебиторских счетах и требования на приобретение, используются внутри организации. Документы, сгенерированные по результатам обработки операций, называются выходными документами, чтобы отличить их от исходных документов, которые используются в начале этого процесса.'''
					bot.send_message(mid, answer1)
					time.sleep(0.1)
					bot.send_message(mid, answer2)

				elif 'установка' in mt:
					answer = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Внедрение ИС. Разработка плана Внедрения. Установка оборудования и программ.

Внедрение системы — это процесс установки аппаратного и программного обеспечения и начало реальной работы ИС.
Планирование внедрения
В плане внедрения указываются мероприятия по внедрению, для каждого из которых определены ожидаемые даты завершения, оценки затрат и ответственные исполнители. Выполнение плана внедрения контролируется руководящим комитетом.
Группа, занимающаяся внедрением, должна определить факторы риска, понижающие вероятность успешного внедрения, и план должен содержать меры или стратегию по блокированию каждого такого фактора.
Например, один из таких факторов состоит в том, что изменения в ИС могут потребовать и изменений в существующей организационной структуре компании. Может понадобиться создание новых подразделений, а существующие могут ликвидироваться за ненадобностью или сокращаться в размерах. Как правило, изменяется структура и статус отдела, занимающегося обработкой данных.
Хотя менеджеры и бухгалтеры не должны быть программистами, они должны понимать, как создается программное обеспечение. Процесс подготовки программ может длиться от нескольких дней до нескольких лет, в зависимости от сложности программной системы. Обычно в этом процессе можно выделить семь шагов:
•	Определение потребностей пользователей. 
•	Разработка плана, определяющего этапы и сроки выполнения работ.
•	Написание кода программ. 
•	Тестирование программ.
•	Документирование программ. 
•	Обучение пользователей.
•	Установка и использование программной системы.'''
					bot.send_message(mid, answer)

				elif 'планирование' in mt:
					answer = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Жизненный цикл разработки ИС. Планирование разработки ИС.

Если ИС плохо спланирована, то ее использование и изменение может оказаться очень неудобным и дорогим процессом. Поэтому до того, как приступать к разработке, проводится предварительное планирование, которое призвано добиться:
- Последовательности. Цели и задачи системы должны соответствовать общему стратегическому плану организации.
- Эффективности. Система должна быть построена, и работать наиболее эффективно, а ее подсистемы должны быть скоординированы.
- Использования передовых технологий. Должны быть приняты решения, на каких технологиях будет строиться система.
- Минимальных затрат. Надо избегать дублирования, никому не нужных работ, перерасхода средств и времени. Сама система должна быть проста в эксплуатации.
- Адаптивности. Руководство должно быть готово к новым потребностям, которые могут возникнуть в будущем, а работники - к будущим изменениям системы.
Когда усилия по разработке плохо спланированы, компании приходится чаще возвращаться к уже пройденным этапам, что приводит к задержкам и повышению затрат.'''
					bot.send_message(mid, answer)

				elif 'участники' in mt:
					answer = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Жизненный цикл разработки ИС. Участники создания ИС.

Для успешной разработки ИС должны сотрудничать очень многие люди.
Во-первых, это руководство организации. Разработка не может быть успешной без ясной позиции высшего руководства по поводу ее необходимости. Обеспечение поддержки, установка целей разработки, анализ работы отдела автоматизации, определение политики по выбору системы, участие в принятии важнейших решений, выделение средств, назначения на ключевые посты - основные функции менеджеров при создании ИС.
Роль пользователей (бухгалтеров, управленцев, других служащих, которые будут использовать систему) определяется тремя моментами. Они должны обозначить свои информационные нужды, они должны участвовать в самой разработке ИС и играть активную роль в оценке ее деятельности.
Поскольку разработка ИС не признает границ между подразделениями и функциями, организации учреждают руководящий комитет. Его задачи - планирование и надзор за разработками, установление политики, координация действий. В его состав включаются представители всех участвующих сторон.
Группа разработчиков каждого проекта объединяет специалистов по ИС, менеджеров, бухгалтеров, аудиторов, других пользователей. В задачу группы входит планирование каждого отдельного проекта, обеспечение его своевременного и эффективного выполнения, взаимодействие с руководящим комитетом, аккумуляция и использование экспертных знаний, необходимых для разработки. Чтобы выполнить эти задачи, группа должна регулярно общаться с пользователями ИС и устраивать обсуждения новых идей и продвижений в выполнении проекта.
Системные аналитики исследуют существующую систему, разрабатывают новую и готовят спецификации для программистов. Программисты пишут новые и модифицируют существующие компьютерные программы.'''
					bot.send_message(mid, answer)

				elif 'этапы' in mt:
					answer = '''
ЦИКЛ ОБРАБОТКИ ДАННЫХ. Этапы цикла обработки данных.

ИС выдает информацию о хранящихся учетных записях для планирования, оценки и принятия решений. Компьютерная ИС переводит данные об операциях в машиночитаемую форму и вводит их в компьютер. После обработки данные сохраняются в форме, пригодной для компьютера, а для пользователей преобразуются в форму, удобную для чтения человеком. Операции, которые выполняются с данными в компьютерных системах, чтобы произвести информацию, образуют цикл обработки данных. Рисунок 2.1 показывает четыре его этапа: ввод данных, хранение данных, обработка данных и вывод информации. В следующих четырех разделах эти этапы обсуждаются более подробно.
Менеджеры и бухгалтеры являются экспертами организации, которые играют важную роль в цикле обработки данных. Они должны взаимодействовать с системными аналитиками, чтобы помочь им ответить на такие вопросы, как например: Какие данные должны вводиться и храниться организацией, кто должен иметь доступ к ним? Как должны храниться данные: на бумаге, в файлах или в базе данных? Как эти данные должны организовываться, корректироваться, храниться, кому и как предоставляться? Как учитывать не только ожидаемую, но и непредвиденную информацию? Чтобы отвечать на эти и подобные вопросы, эксперты должны понимать концепции цикла обработки данных.
 
Рисунок 2.1    Четыре этапа цикла обработки данных'''
					image = 'https://sun9-48.userapi.com/c858524/v858524192/97783/I89_2Ax9VIc.jpg'
					bot.send_message(mid, answer)
					time.sleep(0.1)
					bot.send_photo(mid, image)

				elif 'подготовка' in mt:
					answer1 = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Концептуальная разработка. Оценка альтернатив. Подготовка спецификаций и отчета.

Концептуальная разработка
Фаза концептуальной разработки ИС предназначается для реализации требований пользователей и решения других проблем, обнаруженных на этапе анализа системы. В какой-то момент во время концептуальной разработки должно быть принято решение о выборе между покупкой и разработкой программного обеспечения.
Оценка альтернатив
Существует много способов реализации различных свойств ИС, поэтому ее разработка сопровождается рядом решений по выбору.'''
					image = 'https://sun9-52.userapi.com/c200524/v200524708/1fd03/kxyhklr1UL8.jpg'
					answer2 = '''
Группа разработчиков должна определить возможные альтернативы и оценить каждую из них по отношению к тому:
1. Как хорошо они удовлетворяют целям организации и системы.
2. Как они удовлетворяют потребности пользователей. 
3. Являются ли они экономически осуществимыми
4. Какими достоинствами и недостатками они обладают.
Окончательное решение по выбору должен принимать руководящий комитет
Подготовка спецификаций и отчета
После выбора альтернатив разработки, группа разработчиков определяет концептуальные спецификации для следующих элементов:
• Выходы. Поскольку система разрабатывается для удовлетворения нужд пользователей, работа начинается с определения спецификаций на выходы системы, которые для каждого производимого отчета включает: частоту его использования (ежедневно или еженедельно), его содержание, как он должен выглядеть, на каком носителе предоставляться (мягкая или твердая копия).
• Хранение данных. Описывается структура данных: последовательный или прямой доступ, файловая организация или база данных, размеры и типы полей.
• Входы. Какие данные должны вводиться, где, когда и как данные должны собираться.
• Процедуры обработки. Как обрабатывать введенные и хранящиеся данные, чтобы получать нужные отчеты. Здесь определяется частота и последовательность обработки. Предусматриваются процедуры контроля, аудита и обеспечения безопасности.
В заключение группа разработчиков готовит отчет о концептуальной разработке, который нужен: (1) как руководство на этапе физической разработки, (2) для оценки, насколько удовлетворены требования пользователей и (3) чтобы помочь руководящему комитету оценить ход работ. Главное его содержание - полное описание спецификаций одного или нескольких предлагаемых вариантов. Окончательный выбор варианта ложится на плечи руководящего комитета'''
					bot.send_message(mid, answer1)
					time.sleep(0.1)
					bot.send_photo(mid, image)
					time.sleep(0.1)
					bot.send_message(mid, answer2)

				elif mt == 'метод':
					answer = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Методы создания ИС. Метод "снизу-вверх". Метод "сверху-вниз".

Метод "снизу-вверх"
Первые ИС разрабатывались в вычислительных центрах (ВЦ), создаваемых при крупных производственных и финансовых предприятиях. При этом создаваемый программный продукт предназначался для обслуживания потребностей конкретного предприятия, и его тиражирование не предполагалось. Подход, который получил название "снизу-вверх", применим и сегодня. В условиях постоянно меняющегося законодательства (налогового, таможенного, ВЭД), правил ведения финансово-хозяйственной деятельности и бухгалтерского учета, руководителю предприятия (подразделения) удобно иметь рядом посредника между спущенной сверху инструкцией и компьютером. 
При наличии квалифицированного штата программистов возможна вполне удовлетворительная автоматизация отдельных, важных с точки зрения  руководства, рабочих мест. Общие перспективы создания ИС методом "снизу-вверх" просматриваются на сегодня недостаточно хорошо
Метод "сверху-вниз"
Быстрый рост числа акционерных, частных предприятий и банков позволил некоторым компаниям увидеть здесь будущий рынок сбыта и инвестировать средства в создание программного аппарата для обслуживания этих предприятий. Из всего спектра проблем было выделено два наиболее заметных направлений:
•	автоматизация ведения бухгалтерского аналитического учета
•	автоматизация ведения технологических процессов (например, для банков это в основном - расчетно-кассовое обслуживание, для промышленных предприятий - материальный склад, учет сбыта и движения готовой продукции,  автоматизация процессов проектирования и т.д.).

ИС проектировались "сверху-вниз", т.е. предполагалось, что одна программа должна удовлетворять потребности всех пользователей. В процессе развития и становления в СНГ рыночных отношений были разработаны десятки программ по указанным направлениям (ЛУКА, Алтын, 1С и пр.), совершенствование которых проходило в жесткой конкурентной борьбе.
Основной недостаток данного подхода заключается в ограничении возможностей таких систем по ведению глубокого, часто специфического аналитического и производственно - технологического учета. Идея использования "одной программы для всех" резко ограничила возможности разработчиков и лишила возможности принципиально расширить круг решаемых задач - автоматизировать повседневную деятельность каждого работника.
Стало очевидно, что для успешной реализации задачи совершенствования ИС следует изменить идеологию разработки ИС.'''
					bot.send_message(mid, answer)

				elif 'достоинства' in mt:
					answer1 = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Подходы при создании ИС. Достоинства и недостатки основных подходов при создании ИС.

При создании ИС можно выделить следующие основные подходы:
•	программный продукт может разрабатываться внутри предприятия (собственными силами или с привлечение сторонних организаций),
•	программный продукт может покупаться готовым;
•	программный продукт может приобретаться и модифицироваться;
•	программный продукт может разрабатываться на основе прототипирования.

Кроме того, ИС могут разрабатываться с применением CASE-технологий. Этот подход выделяют в отдельное самостоятельное направление.
Достоинства и недостатки перечисленных подходов (кроме прототипирования и CASE-технологий):'''
					image = 'https://sun9-25.userapi.com/c200524/v200524708/1fd6c/lfJI32BqAVE.jpg'
					answer2 = '''
Даже при наличии хороших готовых программ организация может решить разрабатывать свою систему, если имеет специфические потребности или этого требуют ее размеры и сложность. Обычно такие разработки ведутся самими компаниями, однако возможен вариант приглашения сторонних разработчиков. В этом случае совершенно необходимо:
•	Тщательно выбрать разработчика. Лучше, если сторонний разработчик имеет опыт работы с другими компаниями данной отрасли и понимает, как компания ведет дела.
•	Подписать контракт, накладывающий взаимные обязательства, фиксирующий потребности организации, которые должны быть удовлетворены, и позволяющий расторгнуть соглашение при определенных условиях.
•	Планировать и контролировать каждый шаг. Должно быть достигнуто соглашение по всем аспектам разработки и установлены частые контрольные сроки.
•	Поддерживать эффективное взаимодействие. Отношения между организацией и разработчиком должны быть ясными и определенными в любой момент, чему способствует частое общение.
•	Контролировать все затраты. Все затраты должны проверяться, а денежные выплаты до завершения разработки должны быть минимизированы.
Другая альтернатива - покупка программ. Немало разработчиков программного обеспечения специализируется на определенной отрасли и даже поставляющих информационные системы вместе с компьютерами "под ключ". По оценкам около 80% компаний предпочитают покупать программное обеспечение, а не разрабатывать его. Однако и в этом случае организации приходится проходить жизненный цикл разработки системы, за исключением только некоторых шагов физической разработки, связанных с программированием.
Наиболее гибкий подход к приобретению системы - модификация готового программного обеспечения. Он сочетает достоинства других подходов, однако сопровождается и своими рисками, обусловленными тем, что программное обеспечение при этом как бы меняет своего разработчика.
'''
					bot.send_message(mid, answer1)
					time.sleep(0.1)
					bot.send_photo(mid, image)
					time.sleep(0.1)
					bot.send_message(mid, answer2)

				elif 'прототипирование' in mt:
					answer1 = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Подходы при создании ИС. Использование услуг сторонних организаций. Прототипирование.

Использование услуг сторонней организации (outsourcing) - это практика найма сторонней компании для проведения части или всей деятельности организации по обработке своих данных. На практике существует две разновидности таких услуг.
В одном варианте (mainframe outsourcing agreement) подрядчик нанимает всех или часть служащих клиента, занятых обработкой данных, а затем эксплуатирует всю систему, используя свои компьютеры или компьютеры, купленные у клиента. Такие контракты заключаются на длительное время, обычно на 10 лет. Клиент вносит фиксированную годовую оплату и дополнительные выплаты в зависимости от объемов  обработки данных.  Благодаря  специализации такое  сотрудничество  оказывается взаимовыгодным
В другом варианте (client/server outsourcing agreement) организация отдает на обслуживание лишь часть своей деятельности по обработке данных, поручает выполнять какую-то отдельную функцию. Например, установку и техническое обслуживание компьютеров, обучение и консультирование обслуживающего персонала или обновление программного и аппаратного обеспечения на регулярной основе. Такие соглашения заключаются на срок до пяти лет и позволяют каждому партнеру сосредоточиться на своих задачах.
Использование услуг сторонней организации - скорее организационный прием, чем решение, касающееся основ ИС. Его преимущества - лучшее использование основных фондов, получение доступа к опыту специализированных компаний и современным технологиям, понижение затрат, сокращение времени разработок, сглаживание проблем сезонности бизнеса, а также проблем роста или сокращения организации. К рискам можно отнести потерю контроля за делегированными функциями, трудность прекращения таких взаимоотношений, их негибкость, потерю исключительных свойств ИС компании.'''
					answer2 = '''
Прототипирование - это подход к разработке системы, при котором создается ее упрощенная работающая модель, или прототип. Такой черновой экспериментальный вариант может быть создан быстро и с небольшими затратами и предоставлен пользователям для тестирования. Эксперименты с прототипом позволяют пользователям определить, что им нравится, а что нет. Имея такую реакцию, разработчики вносят изменение в прототип. Этот итеративный процесс продолжается до тех пор, пока не будет достигнут приемлемый уровень удовлетворения потребностей. Полученная в результате модель системы может быть либо развита в полнофункциональную систему, либо ее свойства перенесены на разрабатываемый вариант ИС.
К достоинствам прототипирования относится лучшее определение потребностей пользователей, большая вовлеченность пользователей в разработку и, как следствие, - их удовлетворенность, ускорение времени разработки, обнаружение многих программных ошибок при экспериментах, простота внесения изменений, меньшая стоимость.
Из недостатков можно назвать большой расход времени пользователей, стремление сделать прототип быстро модифицируемым приводит к недостаточно эффективному использованию компьютерных ресурсов, прототип не охватывает все свойства разрабатываемой системы, повышенные ожидания пользователей по отношению к будущей системе и возможные разочарования.
В большинстве случаев прототипирование не заменяет жизненный цикл разработки системы. Оно обычно используется для небольших нестандартных систем, свойства которых можно отразить в упрощенном варианте.'''
					bot.send_message(mid, answer1)
					time.sleep(0.1)
					bot.send_message(mid, answer2)

				elif 'анализ' in mt:
					answer = '''
ЭТАПЫ ЖИЗНЕННОГО ЦИКЛА ПО. Анализ требований

В первую очередь стоит отметить, что процесс тестирования ПО тесно связан непосредственно с процессом разработки. Жизненный цикл разработки состоит из следующих этапов:
1.	Анализ требований
2.	Дизайн
3.	Разработка
4.	Тестирование и дебаггинг
5.	Эксплуатация и поддержка

Анализ требований
Требования к конечному продукту обычно формулируются заказчиком или менеджером проекта. Эти требования могут быть как функциональными, так и нефункциональными. Они формируются в процессе общения с заказчиком или анализа стандартов и нормативной документации.
Представим ситуацию, при которой имеющиеся требования не были протестированы, но были использованы на этапе дизайна и разработки. Только после того, как разработка закончена, требования и сам продукт направляются в отдел QA. Как было сказано ранее, в процессе тестирования мы проверяем, соответствует ли текущее поведение продукта заявленным требованиям. А это значит, что отдел QA может обнаружить ошибки не только в самом продукте, но также и в документации. Как вы можете представить, в этом случае исправление ошибок обойдется гораздо дороже в сравнении с подходом, который предусматривает включение тестов в самые ранние этапы жизненного цикла ПО, такие как фаза анализа требований. Тщательным образом проанализировав требования, вы можете собрать информацию, которая поможет вам оптимизировать процесс работы над проектом с самых первых дней. Как правило, тестирование требований происходит на этапе анализа требований. Эта задача подразумевает ряд тестов, основанных на таких характеристиках как завершенность,согласованность, недвусмысленность и т.д Главная задача такого подхода — убедиться в том, что требования заказчика были правильно интерпретированы и остаются корректными, понятными и последовательными. Важно отметить, что ясная и точная документация помогает выбрать правильные цели для процесса тестирования.'''
					bot.send_message(mid, answer)

				elif 'причины' in mt:
					answer = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Подходы при создании ИС. Причины изменения ИС на предприятиях.

Достоинства и недостатки основных подходов при создании ИС
При создании ИС можно выделить следующие основные подходы:
•	программный продукт может разрабатываться внутри предприятия (собственными силами или с привлечение сторонних организаций),
•	программный продукт может покупаться готовым;
•	программный продукт может приобретаться и модифицироваться;
программный продукт может разрабатываться на основе прототипирования

Компании обычно меняют свои ИС по одной из следующих причин:
• Изменения в потребностях пользователей или предприятия. Увеличение конкуренции, рост предприятия или объединение с другими, новые законы, изменения в локальных, региональных или глобальных взаимоотношениях могут изменить структуру и намерения организации. Чтобы оставаться на уровне новых требований, ИС должна тоже измениться
• Изменения в технологии. По мере того как технологии развиваются и становятся более дешевыми, у организации появляется возможность иметь систему, более отвечающую ее нуждам.
• Улучшение деловых процессов. Многие компании устанавливают новые ИС, стремясь повысить эффективность своей деятельности. Например, сократить время ожидания клиентов.
• Получение преимуществ в конкурентной борьбе. Улучшение качества, увеличение количества и скорости выработки информации может привести к улучшениям в продукте или услуге, или помочь сократить затраты.
• Прирост производительности. Компьютеры автоматизируют многие канцелярские и рутинные работы. Экспертные системы дают многим людям доступ к знаниям экспертов.
• Рост. Растущие компании нуждаются либо в переделке, либо в замене своих ИС.
• Сокращение. Часто компании переходят от централизованных систем с большими ЭВМ к ПК, работающим в сети, чтобы получить преимущество в отношении цена/производительность.
• Улучшение качества. Трудно улучшить качество продуктов и услуг без улучшений в системе, от которой компании получают данные, измеряющие и оценивающие качество. Чтобы что-то менять, надо знать, что именно имеет недостаточное качество.'''
					bot.send_message(mid, answer)

				elif 'стратегии' in mt:
					answer = '''
Стратегии внедрения системы

Внедрение системы - это процесс установки аппаратного и программного обеспечения и начало реальной работы ИС.
В плане внедрения указываются мероприятия по внедрению, для каждого из которых определены ожидаемые даты завершения, оценки затрат и ответственные исполнители. Выполнение плана внедрения контролируется руководящим комитетом.
Группа, занимающаяся внедрением, должна определить факторы риска, понижающие вероятность успешного внедрения и план должен содержать меры или стратегию по блокированию каждого такого фактора.
Например, один из таких факторов состоит в том, что изменения в ИС могут потребовать и изменений в существующей организационной структуре компании. Может понадобиться создание новых подразделений, а существующие могут ликвидироваться за ненадобностью или сокращаться в размерах. Как правило, изменяется структура и статус отдела, занимающегося обработкой данных.'''
					bot.send_message(mid, answer)

				elif mt == 'этап':
					answer = '''
ЭТАПЫ ЖИЗНЕННОГО ЦИКЛА ПО. Этап проектирования

Жизненный цикл программного обеспечения - период разработки и эксплуатации программного обеспечения, в котором обычно выделяют этапы: -1- возникновение и исследование идеи; -2- анализ требований и проектирование; -3- программирование; -4- тестирование и отладка; -5- ввод программы в действие; -6- эксплуатация и сопровождение; -7- завершение эксплуатации.
Следует обратить внимание, что разбиение жизненного цикла на этапы иногда способствует затушевыванию некоторых важных аспектов создания программного обеспечения; особенно это проявляется по отношению к такому необходимому процессу, как итерационная реализация различных этапов жизненного цикла с целью исправления ошибок, изменения решений, которые оказались неправильными, или учета изменений в общих требованиях, предъявляемых к системе.
•	разработка технического задания (этапы 1 и 2);
•	технический проект (третий этап до 3.2.1 включительно);
•	рабочий проект (3.2.2, 4.2.1 и, частично, 4.2, 4.3);
•	экспериментальное внедрение (4.2 и 4.3);
•	сдача в промышленную эксплуатацию (этап 5);
•	промышленная эксплуатация (этап 6).
Одним из базовых понятий проектирования ИС является понятие жизненного цикла её программного обеспечения (ЖЦ ПО) – это непрерывный процесс, начинающийся с момента принятия решения о необходимости создания ПО и заканчивается в момент его полного изъятия из эксплуатации.
ИС входят в состав СУБД и являются специфическим инструментальным и прикладным (пользовательским) программным обеспечением.
Жизненный цикл ИС представляет собой модель её создания и использования. Модель отражает различные состояния ИС, начиная с момента возникновения необходимости в данной ИС и заканчивая моментом её полного выхода из употребления у всех пользователей.'''
					bot.send_message(mid, answer)

				elif 'документ' in mt:
					answer = 'https://drive.google.com/file/d/1dGMZuW8t88yJlEkyztDvoC5OcidVciQD/view?usp=sharing'
					bot.send_message(mid, answer)

				else:
					if mid != 888833912:
						if mid != 999588371:
							answer = name + ', тебе нужно написать только ПЕРВОЕ СЛОВО ПОСЛЕДНЕГО ПРЕДЛОЖЕНИЯ. Не забудь правильно его написать.'
							bot.send_message(mid, answer)

		except:
			print('Что-то пошло не так')

	@bot.callback_query_handler(func=lambda c:True)
	def inlin(c):

		if c.data == 'guz5':
			zhopa = '''
Разработка программ и процедур. Разработка методов контроля и отчета.

Разработка программ - наиболее длительный этап во всем цикле разработки ИС. Этой работой всегда занимаются специалисты по программированию и здесь существует своя специфика - планирование разработки, выбор инструментальных средств и языка программирования, распределение обязанностей в группе разработчиков, использование различных методик разработки программ, неизбежный этап отладки отдельных программ и программной системы в целом. Процесс разработки программ должен быть тщательно спланирован, разбит на параллельные процессы (обычно - это разработка подсистем) и этапы готовности программной системы в целом (исследовательский и испытательный прототипы, рабочая версия), когда эксперты группы разработчиков могут оценить ход и направление ведущихся работ.
Процедуры - это регламентированная деятельность по обслуживанию системы. Они должны покрывать вопросы подготовки ввода данных, обработки операций, обнаружения и исправления ошибок, выверку балансов, доступ к базе данных, подготовку и предоставление отчетов, инструкции оператора ЭВМ. Процедуры могут принимать форму руководств по системе, инструкций пользователя, обучающих материалов, кадров подсистемы помощи. Они могут готовиться как группой разработчиков, так и пользователями.
Если не обеспечить качественных, точных и аккуратных данных на входе системы, а также надежной и корректной их обработки, то получаемый на выходе результат не будет полезным, а может даже оказаться вредным. Методы контроля призваны обеспечить целесообразность, эффективность и точность обработки данных, предотвратить ошибки, обнаруживая и исправляя их в момент их появления. В выработке методов контроля большую роль играют специалисты предприятия - менеджеры и особенно бухгалтеры, т.к. именно они до тонкостей представляют себе деятельность фирмы и в состоянии определить мероприятия, обеспечивающие эффективный контроль за данными. Вот наиболее важные аспекты контроля:
• Законность. Например, как ИС может убедиться, что денежные выплаты вносятся на правильные счета?
• Авторизация. Действительно ли деятельность по вводу, обработке, сохранению и выводу информации производится не посторонними, а уполномоченными людьми?
• Точность. Проверяются ли вводимые данные на точность? Какие меры принимаются, чтобы обеспечить обработку данных без потерь?
• Доступ. Как предотвращается незаконный доступ к данным?
• Нумерация. Перенумерованы ли документы, чтобы предотвратить ошибочное или намеренное их использование в посторонних целях и чтобы своевременно обнаруживать пропажу или кражу документов?
• Возможность проверки. Могут ли данные операций быть прослежены от первичных документов до окончательного вывода (и наоборот)?
По окончании физической разработки готовится отчет, который служит базовым документом для принятия руководством ответственного решения о начале фазы внедрения.'''
			bot.send_message(c.message.chat.id, zhopa)

		elif c.data == 'vlad30':
			zhopa = '''
Разработка стратегии автоматизации

Понятие стратегии автоматизации включает в себя базовые принципы, используемые при автоматизации предприятия. В ее состав входят следующие компоненты:
•	цели: области деятельности предприятия и последовательность, в которой они будут автоматизированы ;
•	способ автоматизации: по участкам, направлениям, комплексная автоматизация;
•	долгосрочная техническая политика - комплекс внутренних стандартов, поддерживаемых на предприятии ;
•	ограничения: финансовые, временные и т.д.;
•	процедура управления изменениями плана.
Стратегия автоматизации в первую очередь должна соответствовать приоритетам и стратегии (задачам) бизнеса. В понятие стратегии также должны входить пути достижения этого соответствия.
Стратегический план автоматизации должен составляться с учетом следующих факторов:
•	средний период между сменой технологий основного производства
•	среднее время жизни выпускаемых предприятием продуктов и его модификаций;
•	анонсированные долгосрочные планы поставщиков технических решений в плане их развития;
•	срок амортизации используемых систем;
•	стратегический план развития предприятия, включая планы слияния и разделения, изменение численности и номенклатуры выпускаемой продукции;
•	планируемые изменения функций персонала.
Автоматизация – лишь один из способов достижения стратегических бизнес-целей, а не процесс, развивающийся по своим внутренним законам. Во главе стратегии автоматизации должна лежать стратегия бизнеса предприятия: миссия предприятия, направления и модель бизнеса.
Таким образом,
Стратегия автоматизации представляет собой план, согласованный по срокам и целям со стратегией организации.'''
			bot.send_message(c.message.chat.id, zhopa)

		elif c.data == 'vlad31':
			zhopa = '''
Разработка стратегии развития предприятия

Разработка стратегии организации является составной частью общего процесса стратегического управления, включающего три взаимоувязанных этапа:
-планирование стратегии (стратегическое планирование), позволяющее учитывать множество факторов и сложнейшую комбинацию их взаимовлияния, оно заменяет интуитивный подход к определению направления развития организации и долгосрочное планирование, базирующееся на сохранении в будущем тенденций, проявившихся в прошлом
-разработку программ, форм и методов реализации стратегии, определение необходимых изменений в структуре, культуре и ресурсах организации
-оценку и контроль выполнения запланированных действий, обеспечение соответствия между прогнозируемыми и реальными факторами и условиями, выявленные отключения являются сигналом для регулирования и корректировки системы планов организации.
Стратегия организации состоит из действий, предпринимаемых руководством для достижения поставленных целей, и деловых подходов, используемых при этом, и формируется на четырех организационных уровнях.
Корпоративная стратегия – стратегия для компании и всех входящих в нее бизнесов в целом.
· Действия, направленные на осуществление диверсификации.
· Инициирование действий, направленных на усиление суммарной производительности тех бизнесов, в которых компания диверсифицировалась.
· Поиск путей достижения взаимосвязи родственных видов бизнеса для повышения конкурентоспособности.
· Установление инвестиционных приоритетов и направление корпоративных ресурсов в наиболее привлекательные виды бизнеса.
Стратегия бизнеса – стратегия для каждого отдельного бизнеса, сделавшего компанию диверсифицированной.'''
			bot.send_message(c.message.chat.id, zhopa)

		elif c.data == 'gosha51':
			zhopa1 = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Физическая разработка. Разработка программ и процедур. Разработка методов контроля и отчета.

Физическая разработка - это перевод широких, ориентированных на пользователя требований, сформулированных на этапе концептуальной разработки, в детальные спецификации, которые могут быть использованы при кодировании я тестировании компьютерных программ. Разрабатываются входные и выходные документы, пишутся компьютерные программы, создаются файлы, разрабатываются процедуры, в новую систему встраиваются способы ее контроля.
Разработка программ и процедур - наиболее длительный этап во всем цикле разработки ИС. Этой работой всегда занимаются специалисты по программированию и здесь существует своя специфика - планирование разработки, выбор инструментальных средств и языка программирования, распределение обязанностей в группе разработчиков, использование различных методик разработки программ, неизбежный этап отладки отдельных программ и программной системы в целом. Процесс разработки программ должен быть тщательно спланирован, разбит на параллельные процессы (обычно - это разработка подсистем) и этапы готовности программной системы в целом (исследовательский и испытательный прототипы, рабочая версия), когда эксперты группы разработчиков могут оценить ход и направление ведущихся работ. Процедуры - это регламентированная деятельность по обслуживанию системы. Они должны покрывать вопросы подготовки ввода данных, обработки операций, обнаружения и исправления ошибок, выверку балансов, доступ к базе данных, подготовку и предоставление отчетов, инструкции оператора ЭВМ. Процедуры могут принимать форму руководств по системе, инструкций пользователя, обучающих материалов, кадров подсистемы помощи. Они могут готовиться как группой разработчиков, так и пользователями.
Разработка методов контроля и подготовка отчета - Если не обеспечить качественных, точных и аккуратных данных на входе системы, а также надежной и корректной их обработки, то получаемый на выходе результат не будет полезным, а может даже оказаться вредным. Методы контроля призваны обеспечить целесообразность, эффективность и точность обработки данных, предотвратить ошибки, обнаруживая и исправляя их в момент их появления. В выработке методов контроля большую роль играют специалисты предприятия - менеджеры и особенно бухгалтеры, т.к. именно они до тонкостей представляют себе деятельность фирмы и в состоянии определить мероприятия, обеспечивающие эффективный контроль за данными. '''
			zhopa2 = '''
Вот наиболее важные аспекты контроля:
• Законность. Например, как ИС может убедиться, что денежные выплаты вносятся на правильные счета?
• Авторизация. Действительно ли деятельность по вводу, обработке, сохранению и выводу информации производится не посторонними, а уполномоченными людьми?
• Точность. Проверяются ли вводимые данные на точность? Какие меры принимаются, чтобы обеспечить обработку данных без потерь?
• Доступ. Как предотвращается незаконный доступ к данным?
• Нумерация. Перенумерованы ли документы, чтобы предотвратить ошибочное или намеренное их использование в посторонних целях, и чтобы своевременно обнаруживать пропажу или кражу документов?
• Возможность проверки. Могут ли данные операций быть прослежены от первичных документов до окончательного вывода (и наоборот)?
По окончании физической разработки готовится отчет, который служит базовым документом для принятия руководством ответственного решения о начале фазы внедрения.'''
			bot.send_message(c.message.chat.id, zhopa1)
			time.sleep(0.1)
			bot.send_message(c.message.chat.id, zhopa2)

		elif c.data == 'gosha52':
			zhopa = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Физическая разработка. Разработка выходов. Разработка файлов и базы данных. Разработка входов.

Физическая разработка - это перевод широких, ориентированных на пользователя требований, сформулированных на этапе концептуальной разработки, в детальные спецификации, которые могут быть использованы при кодировании я тестировании компьютерных программ. Разрабатываются входные и выходные документы, пишутся компьютерные программы, создаются файлы, разрабатываются процедуры, в новую систему встраиваются способы ее контроля.

Разработка выходов
Цель этого этапа - определить назначение, формат, содержание, расписание, в соответствии с которыми будут создаваться отчеты, выходные документы и экранные формы.
Наиболее важные вопросы разработки выходных документов:
- использование (кто, почему и для принятия каких решений нуждается в отчетах);
- носитель (бумага, бланк, экран, голос, файл и т.п.);
- формат (таблица, текст, график);
- адресат (место назначения);
- доступ (кто имеет право знакомиться);
- детализация (определяет объем объяснений);
- расписание (в какое время производить).

Разработка файлов и базы данных
Основные задачи этого этапа - моделирование базы данных. При этом окончательно решаются вопросы о носителе данных (жесткий, гибкий, оптический диск или магнитная лента), об организации доступа (прямой, последовательный, индексно-последовательный), о режиме обработки (пакетный или в реальном времени), о процедурах эксплуатации, оцениваются ожидаемые размеры файлов, скорость их обработки, процент ежегодного обновления записей и другая динамика базы данных.
Очень важно на этом этапе позаботиться о совместимости форматов данных с уже созданными и работающими ИС компании, а может быть и других организаций. В противном случае в будущем могут возникнуть проблемы интеграции баз данных.

Разработка входов
Задача этапа - полностью определить входные данные и оптимальные методы их ввода. Здесь рассмотрению подлежат: способ ввода каждого документа (клавиатура, сканер торгового терминала, OCR - устройство распознавания символов, голос), источник (где данные появляются), формат (первичный или оборотный документ, экранная форма), тип данных, оценка объема, частоты и затрат на ввод данных, требования к подготовке обслуживающего персонала, необходимые меры контроля ошибок и их исправления.'''
			bot.send_message(c.message.chat.id, zhopa)

		elif c.data == 'aiym9':
			zhopa = '''
MRPII-система. Модуль обратной связи.

В настоящее время, системы MRPII класса прочно входят в жизнь крупных и средних производственных организаций. Основной и эффективной чертой этих систем является возможность планировать потребности предприятия на короткие промежутки времени (недели и даже дни) и осуществлять обратную связь (например, автоматически изменять ранее построенные планы производства при сбоях поставок или поломке оборудования) внося в систему данные о проблемах в реальном времени.Алгоритм работы MRPII-системы нацелен на внутреннее моделирование всей области деятельности предприятия. Его основная цель - учитывать и с помощью компьютера анализировать все внутрикоммерческие и внутрипроизводственные события: все те, что происходят в данный момент и все те, что запланированы на будущее. Как только в производстве допущен брак, как только изменена программа производства, как только в производстве утверждены новые технологические требования, MRPII-система мгновенно реагирует на произошедшее, указывает на проблемы, которые могут быть результатом этого и определяет, какие изменения надо внести в производственный план, чтобы избежать этих проблем или свести их к минимуму. Разумеется, далеко не всегда реально полностью устранить последствия того или иного сбоя в производственном процессе, однако MRPII-система информирует о них за максимально длительный промежуток времени, до момента их возникновения.'''
			bot.send_message(c.message.chat.id, zhopa)

		elif c.data == 'baha11':
			zhopa = '''
MRPII-система. Модуль планирования потребности в материалах.

MRP II Manufacturing Resources Planning (планирование производственных ресурсов) - система организации производства и материально-технического обеспечения, рассматриваемая рядом специалистов как второе поколение системы MRP. Система МRР II включает функции системы MRP (например планирование потребностей в материалах), а также ряд новых функций (автоматизированное проектирование, управление технологическими процессами и др.). В системе MRP II широко применяются методы имитационного моделирования.
Модуль планирования потребности в материалах (или видах услуг - "здесь и далее") на основе производственной программы для каждого вида готового изделия определяет требуемое расписание закупки и/или внутреннего производства всех материалов комплектующих этого изделия, и, соответственно, их сборку.'''
			bot.send_message(c.message.chat.id, zhopa)

		elif c.data == 'baha12':
			zhopa = '''
MRPII-система. Модуль планирования продаж.

MRP II Manufacturing Resources Planning (планирование производственных ресурсов) - система организации производства и материально-технического обеспечения, рассматриваемая рядом специалистов как второе поколение системы MRP. Система МRР II включает функции системы MRP (например планирование потребностей в материалах), а также ряд новых функций (автоматизированное проектирование, управление технологическими процессами и др.). В системе MRP II широко применяются методы имитационного моделирования.
Модуль планирования продаж оценивает (обычно в единицах готового изделия), какими должны быть объем и динамика продаж, чтобы был выполнен установленный бизнес-план. Изменения плана продаж, несомненно, влекут за собой изменения в результатах других модулей.'''
			bot.send_message(c.message.chat.id, zhopa)

		elif c.data == 'baha13':
			zhopa = '''
MRPII-система. Модуль планирования производства

MRP II Manufacturing Resources Planning (планирование производственных ресурсов) - система организации производства и материально-технического обеспечения, рассматриваемая рядом специалистов как второе поколение системы MRP. Система МRР II включает функции системы MRP (например планирование потребностей в материалах), а также ряд новых функций (автоматизированное проектирование, управление технологическими процессами и др.). В системе MRP II широко применяются методы имитационного моделирования.
Модуль планирования производства утверждает план производства всех видов готовых изделий и их характеристики. Для каждого вида изделия в рамках выпускаемой линии продукции существует своя собственная программа производства. Таким образом, совокупность производственных программ для всех видов выпускаемых изделий, представляет собой производственный план предприятия в целом.'''
			bot.send_message(c.message.chat.id, zhopa)

		elif c.data == 'baha14':
			zhopa = '''
MRPII-система. Модуль планирования производственных мощностей.

MRP II Manufacturing Resources Planning (планирование производственных ресурсов) - система организации производства и материально-технического обеспечения, рассматриваемая рядом специалистов как второе поколение системы MRP. Система МRР II включает функции системы MRP (например планирование потребностей в материалах), а также ряд новых функций (автоматизированное проектирование, управление технологическими процессами и др.). В системе MRP II широко применяются методы имитационного моделирования.
Модуль планирования производственных мощностей преобразует план производства в конечные единицы загрузки рабочих мощностей (станков, рабочих, лабораторий и т.д.)'''
			bot.send_message(c.message.chat.id, zhopa)

		elif c.data == 'ras22':
			zhopa = '''
ИНФОРМАЦИЯ И ПРЕДПРИЯТИЕ. Основные компоненты предприятия (организации). Рабочие места. Основные фонды.

Структура предприятия — это состав и соотношение его внутренних звеньев: цехов, отделов, лабораторий и других компонентов, составляющих единый хозяйственный объект. Структура предприятия определяется такими факторами: характер продукции и технологии ее изготовления, масштаб производства, степень специализации предприятия и кооперирования его с другими фабриками и заводами, а также степень специализации производства внутри предприятия.
Наряду с этим при всем многообразии структур все производственные предприятия имеют идентичные функции, главные из которых — изготовление и сбыт продукции. Чтобы обеспечить нормальное функционирование, предприятие должно иметь в своем составе цеха или мастерские по изготовлению основной продукции (выполнению работ, оказанию услуг) и по обслуживанию производственного процесса.
Помимо того, каждое предприятие независимо от его размеров, отраслевой принадлежности и уровня специализации постоянно ведет работу по оформлению заказов на изготовление продукции; организует ее сохранность и сбыт заказчику; обеспечивает закупку и поставку необходимого сырья, материалов, комплектующих изделий, инструмента, оборудования, энергоресурсов.
Наконец, чтобы каждый работник в любой отрезок времени делал именно то, что необходимо остальным и всему предприятию в целом, нужны управляющие органы. На эти органы возлагаются задача определения долгосрочной стратегии, координация и контроль текущей деятельности персонала, а также наем, оформление и расстановка кадров. Все структурные звенья предприятия, таким образом, связаны между собой с помощью системы управления, которая становится его головным органом.
Рабочее место - первичное и основное звено производства, рациональная его организация имеет важнейшее значение во всем комплексе вопросов научной организации труда. Именно на рабочем месте происходит соединение элементов производственного процесса - средств труда, предметов труда и самого труда. На рабочем месте достигается главная цель труда - качественное, экономичное и своевременное изготовление продукции или выполнение установленного объема работы.
Организация рабочего места - это система мероприятий по его оснащению средствами и предметами труда и размещению их в определенном порядке.
Организация обслуживания рабочего места означает его обеспечение средствами, предметами труда и услугами, необходимыми для осуществления трудового процесса. Основная цель организации рабочего места - достижение высококачественного и экономически эффективного выполнения производственного задания в установленные сроки на основе полного использования оборудования, рабочего времени, применения передовых методов труда с наименьшими физическими усилиями, создания безопасных и благоприятных условий ведения работ.
Основные фонды — это часть производственных фондов, которая участвует в процессе производства длительное время, сохраняя при этом свою натуральную форму, а их стоимость переносится на продукцию постепенно, по частям, по мере использования.
К основным фондам относятся объекты, которые служат не менее года и стоимостью выше определенной величины, устанавливаемой в зависимости от динамики цен на продукцию фондосоздающих отраслей (К основным фондам относятся объекты, стоимость которых определяется в размере пятидесятикратной установленной законом минимальной месячной оплаты труда на дату их приобретения).
Сущность основных фондов:
- они вещественно воплощены в средствах труда;
- их стоимость по частям переносится на продукцию;
- они сохраняют натуральную форму длительное время по мере износа;
- возмещаются на основе амортизационных отчислений по истечении срока службы.'''
			bot.send_message(c.message.chat.id, zhopa)

		elif c.data == 'sasha41':
			zhopa = '''
СОЗДАНИЕ ИНФОРМАЦИОННЫХ СИСТЕМ. Жизненный цикл разработки ИС. Основные этапы создания ИС.

Основные этапы создания ИС
Суть этапа анализа системы - сбор информации, необходимой для приобретения или разработки новой системы. Чтобы максимизировать использование ограниченных ресурсов, требования к разработке системы ранжируются по степени важности. После начального этапа производится исследование используемой в данный момент ИС, чтобы определить ее природу, нацеленность и понять сильные и слабые стороны. 
На этапе концептуальной разработки компания решает, как удовлетворить свои потребности. Первая задача - определить и оценить возможные альтернативы. 
На этапе физической разработки разрабатываются входные и выходные документы, пишутся компьютерные программы, создаются файлы, разрабатываются процедуры, в новую систему встраиваются способы ее контроля.
Внедрение — это этап, на котором соединяются воедино все элементы системы и начинается ее деятельность. 
Эксплуатация и обслуживание. После того, как система заработала, она изучается на предмет обнаружения и исправления недостатков разработки. 
В дополнение к этим пяти этапам, на протяжении всего цикла разработки ИС производится планирование, управление поведенческими реакциями пользователей на изменения и оценка текущих возможностей всего проекта.'''
			bot.send_message(c.message.chat.id, zhopa)

		
	bot.polling(none_stop = True)
except:
	print('Что-то пошло не так')
